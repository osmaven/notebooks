{
  "paragraphs": [
    {
      "text": " sqlContext.sparkContext.hadoopConfiguration.set(\"avro.mapred.ignore.inputs.without.extension\", \"false\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 3:41:07 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509377113333_-511361787",
      "id": "20171030-152513_445274084",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Oct 30, 2017 3:25:13 PM",
      "dateStarted": "Oct 30, 2017 3:41:07 PM",
      "dateFinished": "Oct 30, 2017 3:41:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import com.databricks.spark.avro._\nimport org.apache.spark.sql.SparkSession\nimport java.io._\nimport java.util.zip._\nimport java.nio.charset.StandardCharsets\n//val textFile \u003d sc.textFile(\"hdfs://10.188.244.158/data/BPE/OMS/data/2017-10-30/txb.fdfb1fb5-6ceb-4932-b964-00f3f4da2a2c.events\")\nval df \u003d spark.read.avro(\"hdfs://10.188.244.158/data/BPE/OMS/data/2017-10-30/txb.fdfb1fb5-6ceb-4932-b964-00f3f4da2a2c.events\")\n//df.select(\"payload\").write.format(\"json\").save(\"file:///tmp/file1.csv\")\n\n//val in \u003d new GZIPInputStream(new FileInputStream(\"/tmp/file1.csv/\"))\n",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:12:23 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509373545409_1401321351",
      "id": "20171030-142545_101268324",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport com.databricks.spark.avro._\n\nimport org.apache.spark.sql.SparkSession\n\nimport java.io._\n\nimport java.util.zip._\n\nimport java.nio.charset.StandardCharsets\n\ndf: org.apache.spark.sql.DataFrame \u003d [msgId: string, sourceMsgId: string ... 5 more fields]\n"
      },
      "dateCreated": "Oct 30, 2017 2:25:45 PM",
      "dateStarted": "Oct 30, 2017 5:12:23 PM",
      "dateFinished": "Oct 30, 2017 5:12:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val inputStream \u003d new FileInputStream(df)",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:13:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509383598714_-300771522",
      "id": "20171030-171318_658139853",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\n\n\n\u003cconsole\u003e:296: error: overloaded method constructor FileInputStream with alternatives:\n  (x$1: java.io.FileDescriptor)java.io.FileInputStream \u003cand\u003e\n  (x$1: java.io.File)java.io.FileInputStream \u003cand\u003e\n  (x$1: String)java.io.FileInputStream\n cannot be applied to (org.apache.spark.sql.DataFrame)\n       val inputStream \u003d new FileInputStream(df)\n                         ^\n"
      },
      "dateCreated": "Oct 30, 2017 5:13:18 PM",
      "dateStarted": "Oct 30, 2017 5:13:22 PM",
      "dateFinished": "Oct 30, 2017 5:13:23 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val t2 \u003d df.collect().map(_.getString(0)).mkString(\" \")\n",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:12:15 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509381879182_-2074113664",
      "id": "20171030-164439_1585451853",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\njava.util.NoSuchElementException: None.get\n  at scala.None$.get(Option.scala:347)\n  at scala.None$.get(Option.scala:345)\n  at org.apache.spark.sql.execution.DataSourceScanExec$class.org$apache$spark$sql$execution$DataSourceScanExec$$redact(DataSourceScanExec.scala:70)\n  at org.apache.spark.sql.execution.DataSourceScanExec$$anonfun$4.apply(DataSourceScanExec.scala:54)\n  at org.apache.spark.sql.execution.DataSourceScanExec$$anonfun$4.apply(DataSourceScanExec.scala:52)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)\n  at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n  at org.apache.spark.sql.execution.DataSourceScanExec$class.simpleString(DataSourceScanExec.scala:52)\n  at org.apache.spark.sql.execution.FileSourceScanExec.simpleString(DataSourceScanExec.scala:155)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.verboseString(QueryPlan.scala:349)\n  at org.apache.spark.sql.execution.FileSourceScanExec.org$apache$spark$sql$execution$DataSourceScanExec$$super$verboseString(DataSourceScanExec.scala:155)\n  at org.apache.spark.sql.execution.DataSourceScanExec$class.verboseString(DataSourceScanExec.scala:60)\n  at org.apache.spark.sql.execution.FileSourceScanExec.verboseString(DataSourceScanExec.scala:155)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString(TreeNode.scala:556)\n  at org.apache.spark.sql.execution.WholeStageCodegenExec.generateTreeString(WholeStageCodegenExec.scala:451)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.treeString(TreeNode.scala:480)\n  at org.apache.spark.sql.execution.QueryExecution$$anonfun$completeString$3.apply(QueryExecution.scala:229)\n  at org.apache.spark.sql.execution.QueryExecution$$anonfun$completeString$3.apply(QueryExecution.scala:229)\n  at org.apache.spark.sql.execution.QueryExecution.stringOrError(QueryExecution.scala:112)\n  at org.apache.spark.sql.execution.QueryExecution.completeString(QueryExecution.scala:229)\n  at org.apache.spark.sql.execution.QueryExecution.toString(QueryExecution.scala:202)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:62)\n  at org.apache.spark.sql.Dataset.withAction(Dataset.scala:2836)\n  at org.apache.spark.sql.Dataset.collect(Dataset.scala:2390)\n  ... 170 elided\n"
      },
      "dateCreated": "Oct 30, 2017 4:44:39 PM",
      "dateStarted": "Oct 30, 2017 5:12:16 PM",
      "dateFinished": "Oct 30, 2017 5:12:17 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.InputStream\nimport java.io._\nimport java.util.zip._\nimport java.nio.charset.StandardCharsets\nimport org.apache.commons.io.IOUtils\nval  texto \u003d new GZIPInputStream(t2.getBytes(StandardCharsets.UTF_8.name()))\n",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:09:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509378384308_-704085404",
      "id": "20171030-154624_336074575",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\nimport java.io.InputStream\n\nimport java.io._\n\nimport java.util.zip._\n\nimport java.nio.charset.StandardCharsets\n\nimport org.apache.commons.io.IOUtils\n\n\n\n\n\n\u003cconsole\u003e:287: error: type mismatch;\n found   : Array[Byte]\n required: java.io.InputStream\n       val  texto \u003d new GZIPInputStream(t2.getBytes(StandardCharsets.UTF_8.name()))\n                                                   ^\n"
      },
      "dateCreated": "Oct 30, 2017 3:46:24 PM",
      "dateStarted": "Oct 30, 2017 5:09:26 PM",
      "dateFinished": "Oct 30, 2017 5:09:30 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import scala.io.Source\nimport java.io.InputStream\nval  stream:InputStream \u003d texto;",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:07:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509382858444_590478262",
      "id": "20171030-170058_2044679876",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport scala.io.Source\n\nimport java.io.InputStream\n\nstream: java.io.InputStream \u003d java.io.ByteArrayInputStream@1c095fd9\n"
      },
      "dateCreated": "Oct 30, 2017 5:00:58 PM",
      "dateStarted": "Oct 30, 2017 5:07:29 PM",
      "dateFinished": "Oct 30, 2017 5:07:33 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val t1 \u003d new GZIPInputStream(stream);",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:10:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509383393760_417479698",
      "id": "20171030-170953_1042231498",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\njava.util.zip.ZipException: Not in GZIP format\n  at java.util.zip.GZIPInputStream.readHeader(GZIPInputStream.java:165)\n  at java.util.zip.GZIPInputStream.\u003cinit\u003e(GZIPInputStream.java:79)\n  at java.util.zip.GZIPInputStream.\u003cinit\u003e(GZIPInputStream.java:91)\n  ... 170 elided\n"
      },
      "dateCreated": "Oct 30, 2017 5:09:53 PM",
      "dateStarted": "Oct 30, 2017 5:10:32 PM",
      "dateFinished": "Oct 30, 2017 5:10:34 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val zipIn \u003d new ZipInputStream(stream)",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 5:07:48 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509382388546_417652674",
      "id": "20171030-165308_133666309",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nzipIn: java.util.zip.ZipInputStream \u003d java.util.zip.ZipInputStream@1960dbe1\n"
      },
      "dateCreated": "Oct 30, 2017 4:53:08 PM",
      "dateStarted": "Oct 30, 2017 5:07:48 PM",
      "dateFinished": "Oct 30, 2017 5:07:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val result \u003d IOUtils.toString(texto, StandardCharsets.UTF_8);",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 4:51:55 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509382059081_-1757805740",
      "id": "20171030-164739_1591101941",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "result: String \u003d 6011e993-3f3e-48c6-9267-54ad5ddc9822 41db358b-5b0b-4799-9088-c58a19a566f9 3f5f4831-a6d8-4c52-9e89-35a89ccc57cf 06d08462-1d80-46af-a0e2-758ca3c7965f 461b5a5f-fc50-4fff-9d84-ce9764b1e7b9 0d80d32e-37a1-4daf-9da3-a00127587fde 8ae9b9d9-6b7e-4094-8b96-c6e27c8f1819 2148ad56-4d67-4153-9244-db992627cff9 48446c9d-2d0e-433c-ad64-5a73afd53325 e69b05a5-7b62-4efb-b3c3-1d6825600af8 e536ec4b-3a4c-46d9-9e7a-bd9eb2b10549 6a8b994f-36ff-4b05-853b-5cf2baa2b033 a6a085bc-3b04-4cbe-bec1-9f07e8ad0013 03b0147a-32eb-4e21-a71b-1f5540da7539 c54398c4-da87-477a-b5bd-b9e1a38b11fe 9210236b-7617-4b77-a18c-4ed135dc6e5d ac70bb3f-63ed-4912-b46a-26942b4a54ab bf4b13b3-3150-425a-9fcf-77fb94c08943 bc931330-1dcd-41e0-8564-2adb27b7825c c9c4200e-a40c-4f58-ad11-7c36156a02d4 7606afd8-54d6-405c-a534-ab45bd906649 99e..."
      },
      "dateCreated": "Oct 30, 2017 4:47:39 PM",
      "dateStarted": "Oct 30, 2017 4:51:55 PM",
      "dateFinished": "Oct 30, 2017 4:51:56 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val payload \u003d df.select(\"payload\")\npayload.collect().map(_.getString(0)).mkString(\"\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 3:53:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509377989964_-1057868857",
      "id": "20171030-153949_1533606835",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\npayload: org.apache.spark.sql.DataFrame \u003d [payload: binary]\n\n\n\n\n\n\n\n\n\n\n\n\njava.lang.ClassCastException: [B cannot be cast to java.lang.String\n  at org.apache.spark.sql.Row$class.getString(Row.scala:255)\n  at org.apache.spark.sql.catalyst.expressions.GenericRow.getString(rows.scala:165)\n  at $anonfun$1.apply(\u003cconsole\u003e:60)\n  at $anonfun$1.apply(\u003cconsole\u003e:60)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\n  at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)\n  at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)\n  at scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:186)\n  ... 62 elided\n"
      },
      "dateCreated": "Oct 30, 2017 3:39:49 PM",
      "dateStarted": "Oct 30, 2017 3:53:24 PM",
      "dateFinished": "Oct 30, 2017 3:53:31 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var in \u003d new GZIPInputStream(payload)",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 3:41:54 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509377948599_-667758664",
      "id": "20171030-153908_1710651346",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\n\n\u003cconsole\u003e:49: error: type mismatch;\n found   : org.apache.spark.sql.DataFrame\n    (which expands to)  org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n required: java.io.InputStream\n       var in \u003d new GZIPInputStream(payload)\n                                    ^\n"
      },
      "dateCreated": "Oct 30, 2017 3:39:08 PM",
      "dateStarted": "Oct 30, 2017 3:41:54 PM",
      "dateFinished": "Oct 30, 2017 3:41:54 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nimport avro\nimport avro.schema\nimport zlib\nimport string\n\nWINDOW_BUFFER_SIZE \u003d 16 + zlib.MAX_WBITS\n\n\nfrom avro.datafile import DataFileReader\nfrom avro.io import DatumReader\ntotal \u003d\"\"\nreader \u003d DataFileReader(open(\"hdfs://10.188.244.158/data/BPE/OMS/data/2017-10-30/txb.fdfb1fb5-6ceb-4932-b964-00f3f4da2a2c.events\", \"rb\"), DatumReader())\nprint type(reader)\nfor campo in reader:\n    for k in campo:\n\n        zip \u003d zlib.decompressobj(WINDOW_BUFFER_SIZE)\n        t1\u003dzip.decompress(campo[\u0027payload\u0027])\n        total \u003d total + t1\n      # print type(t1)\n    text_file \u003d open(\"oms_output_total.xml\", \"w\")\n    text_file.write(total)\n    text_file.close()\nexit",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 3:20:27 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509373919274_-1080343516",
      "id": "20171030-143159_163032842",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-6732755639552325939.py\", line 279, in \u003cmodule\u003e\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/tmp/zeppelin_pyspark-6732755639552325939.py\", line 272, in \u003cmodule\u003e\n    exec(code)\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\nImportError: No module named avro\n\n"
      },
      "dateCreated": "Oct 30, 2017 2:31:59 PM",
      "dateStarted": "Oct 30, 2017 3:20:27 PM",
      "dateFinished": "Oct 30, 2017 3:20:27 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "textFile.count()",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:30:48 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509373839662_-1926729799",
      "id": "20171030-143039_1766723489",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nres1: Long \u003d 487349\n"
      },
      "dateCreated": "Oct 30, 2017 2:30:39 PM",
      "dateStarted": "Oct 30, 2017 2:30:48 PM",
      "dateFinished": "Oct 30, 2017 2:30:59 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df \u003d sqlContext.read\n    .format(\"com.databricks.spark.xml\")\n    .option(\"rowTag\", \"event:Order\")\n    .load(\"s3://hcom-data-prod-users/omateosventura/oms_output_total.xml\")\ndf.createOrReplaceTempView(\"oms_xml1\")\n",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:15:42 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509277753046_-1829513850",
      "id": "20171029-114913_2146244185",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "df: org.apache.spark.sql.DataFrame \u003d [common:AdditionalDataList: struct\u003ccommon:AdditionalData: array\u003cstruct\u003cAbacusExperimentInfoList:AbacusExperimentInfoList:struct\u003c_AbacusExperimentInfoList:string,_VALUE:string,_message:string,_ns2:string,_xsi:string,n2:abacusExperimentList:array\u003cstruct\u003c_n2:string,n2:bucketValue:bigint,n2:id:bigint,n2:name:string\u003e\u003e,n3:abacusExperimentList:array\u003cstruct\u003c_n3:string,n3:bucketValue:bigint,n3:id:bigint,n3:name:string\u003e\u003e,n4:abacusExperimentList:array\u003cstruct\u003c_n4:string,n4:bucketValue:bigint,n4:id:bigint,n4:name:string\u003e\u003e,n5:abacusExperimentList:array\u003cstruct\u003c_n5:string,n5:bucketValue:bigint,n5:id:bigint,n5:name:string\u003e\u003e,n7:abacusExperimentList:array\u003cstruct\u003c_n7:string,n7:bucketValue:bigint,n7:id:bigint,n7:name:string\u003e\u003e,n8:abacusExperimentList:array\u003cstruct\u003c_n8:stri..."
      },
      "dateCreated": "Oct 29, 2017 11:49:13 AM",
      "dateStarted": "Oct 30, 2017 2:15:42 PM",
      "dateFinished": "Oct 30, 2017 2:16:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df \u003d sqlContext.read\n    .format(\"com.databricks.spark.xml\")\n    .option(\"rowTag\", \"payment:PaymentItemDetail\")\n    .load(\"s3://hcom-data-prod-users/omateosventura/oms_output_total.xml\")\ndf.createOrReplaceTempView(\"oms_xml2\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:17:18 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509369943366_-198784142",
      "id": "20171030-132543_1079432486",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndf: org.apache.spark.sql.DataFrame \u003d [_payment: string, payment:BrandName: string ... 15 more fields]\n"
      },
      "dateCreated": "Oct 30, 2017 1:25:43 PM",
      "dateStarted": "Oct 30, 2017 2:17:18 PM",
      "dateFinished": "Oct 30, 2017 2:17:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "spark.sql(\"\"\"select `payment:BrandName`,count(*)  from oms_xml2 group by  `payment:BrandName` \"\"\").show",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:22:35 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509373174695_-1494787601",
      "id": "20171030-141934_2013511305",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "+-----------------+--------+\n|payment:BrandName|count(1)|\n+-----------------+--------+\n|         Discover|       7|\n|             null|     546|\n|          BC Card|       7|\n|     InterCompany|      49|\n|             Visa|     889|\n|       MasterCard|     637|\n|              JCB|      14|\n|  AmericanExpress|     133|\n|          CartaSi|       7|\n+-----------------+--------+\n\n"
      },
      "dateCreated": "Oct 30, 2017 2:19:34 PM",
      "dateStarted": "Oct 30, 2017 2:22:35 PM",
      "dateFinished": "Oct 30, 2017 2:22:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select count(*) from oms_xml2",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:18:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "_payment",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "payment:BrandName",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "_payment",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "payment:BrandName",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509369966539_-2002071588",
      "id": "20171030-132606_1697789895",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "count(1)\n2289\n"
      },
      "dateCreated": "Oct 30, 2017 1:26:06 PM",
      "dateStarted": "Oct 30, 2017 2:18:31 PM",
      "dateFinished": "Oct 30, 2017 2:18:46 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "df.printSchema()",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 12:39:12 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509364463232_-75305983",
      "id": "20171030-115423_882813673",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "root\n |-- common:AdditionalDataList: struct (nullable \u003d true)\n |    |-- common:AdditionalData: array (nullable \u003d true)\n |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |-- _content: string (nullable \u003d true)\n |    |    |    |-- _id: string (nullable \u003d true)\n |    |    |    |-- _isPersistable: boolean (nullable \u003d true)\n |    |    |    |-- _key: string (nullable \u003d true)\n |    |    |    |-- _namespace: string (nullable \u003d true)\n |    |    |    |-- common:ItineraryID: struct (nullable \u003d true)\n |    |    |    |    |-- common:ItineraryNumber: long (nullable \u003d true)\n |    |    |    |    |-- common:TravelProductId: long (nullable \u003d true)\n |    |    |    |    |-- common:TravelRecordLocator: long (nullable \u003d true)\n |    |    |    |-- data:ExpediaUser: struct (nullable \u003d true)\n |    |    |    |    |-- data:User: struct (nullable \u003d true)\n |    |    |    |    |    |-- data:LegacySiteKey: long (nullable \u003d true)\n |    |    |    |    |    |-- data:UserID: long (nullable \u003d true)\n |    |    |    |-- ns46:NudataBehaviorDetails: struct (nullable \u003d true)\n |    |    |    |    |-- _message: string (nullable \u003d true)\n |    |    |    |    |-- _ns2: string (nullable \u003d true)\n |    |    |    |    |-- _ns46: string (nullable \u003d true)\n |    |    |    |    |-- ns46:AccountID: long (nullable \u003d true)\n |    |    |    |    |-- ns46:FlowId: string (nullable \u003d true)\n |    |    |    |    |-- ns46:NudataAttributeList: struct (nullable \u003d true)\n |    |    |    |    |    |-- ns46:NudataAttribute: array (nullable \u003d true)\n |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |-- ns46:key: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- ns46:value: string (nullable \u003d true)\n |    |    |    |    |-- ns46:NumberOfInterdictionAttempts: long (nullable \u003d true)\n |    |    |    |    |-- ns46:Placement: string (nullable \u003d true)\n |    |    |    |    |-- ns46:RequiredAction: string (nullable \u003d true)\n |    |    |    |    |-- ns46:Score: long (nullable \u003d true)\n |    |    |    |    |-- ns46:ScoreBand: string (nullable \u003d true)\n |    |    |    |    |-- ns46:SessionID: string (nullable \u003d true)\n |    |    |    |    |-- ns46:SignatureItemList: string (nullable \u003d true)\n |-- common:AssociatedUsers: struct (nullable \u003d true)\n |    |-- common:Customer: struct (nullable \u003d true)\n |    |    |-- common:Address: struct (nullable \u003d true)\n |    |    |    |-- common:CompanyNameAddressLine: string (nullable \u003d true)\n |    |    |    |-- common:CountryAlpha3Code: string (nullable \u003d true)\n |    |    |    |-- common:PostalCode: long (nullable \u003d true)\n |    |    |-- common:EmailAddress: string (nullable \u003d true)\n |    |    |-- common:FirstName: string (nullable \u003d true)\n |    |    |-- common:JurisdictionCode: string (nullable \u003d true)\n |    |    |-- common:LastName: string (nullable \u003d true)\n |    |    |-- common:Phone: struct (nullable \u003d true)\n |    |    |    |-- common:PhoneAreaCode: long (nullable \u003d true)\n |    |    |    |-- common:PhoneCountryCode: long (nullable \u003d true)\n |    |    |    |-- common:PhoneNumber: long (nullable \u003d true)\n |    |    |-- common:PointOfSaleCustomerIdentifierData: struct (nullable \u003d true)\n |    |    |    |-- _namespace: string (nullable \u003d true)\n |    |    |    |-- _type: string (nullable \u003d true)\n |    |    |    |-- data:HotelsUser: struct (nullable \u003d true)\n |    |    |    |    |-- data:CustomerID: long (nullable \u003d true)\n |    |    |    |    |-- data:DossierID: string (nullable \u003d true)\n |-- common:LastUpdateDate: string (nullable \u003d true)\n |-- common:OrderCreateDate: string (nullable \u003d true)\n |-- common:OrderId: long (nullable \u003d true)\n |-- common:OrderLineList: struct (nullable \u003d true)\n |    |-- common:OrderLine: struct (nullable \u003d true)\n |    |    |-- common:LastUpdateDate: string (nullable \u003d true)\n |    |    |-- common:LineUpdateFlag: string (nullable \u003d true)\n |    |    |-- common:OrderLineCreateDate: string (nullable \u003d true)\n |    |    |-- common:OrderLineData: struct (nullable \u003d true)\n |    |    |    |-- _namespace: string (nullable \u003d true)\n |    |    |    |-- _type: string (nullable \u003d true)\n |    |    |    |-- lbc:BookedItem: struct (nullable \u003d true)\n |    |    |    |    |-- _lbc: string (nullable \u003d true)\n |    |    |    |    |-- _message: string (nullable \u003d true)\n |    |    |    |    |-- _ns2: string (nullable \u003d true)\n |    |    |    |    |-- base:Sequence: struct (nullable \u003d true)\n |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |-- lbc:BookDateTime: string (nullable \u003d true)\n |    |    |    |    |-- lbc:BookingAmountList: struct (nullable \u003d true)\n |    |    |    |    |    |-- lbc:BookingAmount: array (nullable \u003d true)\n |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |-- lbc:AmountLevelID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:BookingAmountID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:BookingItemID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:BookingSequenceNumber: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:CommissionInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lbc:CommissionAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lbc:CommissionPercentage: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:Cost: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AmountDescription: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AmountReferenceCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:CreateDateTime: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:CreateTPID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:CreateTUID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:IsCancel: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:MonetaryCalculationID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:MonetaryCalculationSystemID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:MonetaryClassID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:MonetaryName: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:Price: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AmountDescription: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AmountReferenceCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:SequenceNumberItemInventory: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:UseDate: string (nullable \u003d true)\n |    |    |    |    |-- lbc:CancelDateTime: string (nullable \u003d true)\n |    |    |    |    |-- lbc:ConfirmationIDs: struct (nullable \u003d true)\n |    |    |    |    |    |-- lbc:ConfirmationNumber: string (nullable \u003d true)\n |    |    |    |    |    |-- lbc:InquiryID: long (nullable \u003d true)\n |    |    |    |    |    |-- lbc:ReservationID: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:ConfirmPending: long (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:ID1: long (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:ID2: long (nullable \u003d true)\n |    |    |    |    |-- lbc:CreateDateTime: string (nullable \u003d true)\n |    |    |    |    |-- lbc:IsFraudSuspected: long (nullable \u003d true)\n |    |    |    |    |-- lbc:IsSynchronousBooking: long (nullable \u003d true)\n |    |    |    |    |-- lbc:LodgingBookedItem: struct (nullable \u003d true)\n |    |    |    |    |    |-- lbc:BookingConfiguration: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- base:Sequence: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:BookingRoomOptions: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:BedSelected: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:SmokingTypeSelected: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lbc:NonSmokingSelected: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lbc:SmokingSelected: long (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:PrimaryGuest: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:Address: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:PrimaryPhone: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- place:PhoneAreaCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _place: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- place:PhoneCountryCode: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _place: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- place:PhoneNumber: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _place: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lbc:TravelerUserId: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- person:EmailAddress: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _person: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- person:FirstName: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _person: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- person:LastName: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _person: string (nullable \u003d true)\n |    |    |    |    |    |    |-- lc:RoomOccupancy: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lc:AdultCount: long (nullable \u003d true)\n |    |    |    |    |    |-- lbc:BookingItemID: long (nullable \u003d true)\n |    |    |    |    |    |-- lbc:HotelProduct: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:ReconcileConfirmed: long (nullable \u003d true)\n |    |    |    |    |    |    |-- lc:CheckInDate: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |-- lc:CheckOutDate: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |-- lc:HotelAvailDetail: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lc:HotelBase: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AccountingVendorID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AvailTypeStatus: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:ContractedMaxReconTime: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyExchangeInfoCost: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:DecimalPlaces: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExchangeToUSD: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- time:DateTime: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _time: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyExchangeInfoPrice: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:DecimalPlaces: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExchangeToUSD: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- time:DateTime: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _time: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyExchangeInfoRequest: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:DecimalPlaces: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExchangeToUSD: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- time:DateTime: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _time: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:HotelID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:HotelRouteInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ChainID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:HotelChainCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:HotelInventoryType: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:HotelPropertyCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:HotelSSFlag: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:HotelStarRating: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:IsDualEnabled: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:TimeZoneDescription: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:TimeZoneID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- lc:Product: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:AvailTypeStatus: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:BedType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:CurrencyExchangeInfoPrice: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:DecimalPlaces: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExchangeToUSD: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- time:DateTime: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _time: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:HasContent: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:HotelRateInfoBitmask: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:LodgingRules: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CancellationPolicy: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:CancelPenaltyRuleList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:CancelPenaltyRule: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:CancelPenaltyRuleVersionID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PenaltyInNightCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PenaltyInPercentageOfStay: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PenaltyWindowEndHourCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PenaltyWindowStartHourCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:CancellationTime: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RestrictionFlags: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RoomOccupancyPolicy: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:IncludedGuestCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:MaxGuestCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:MinCheckInAge: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:MinGuestAge: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:NonRefundable: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:PriceTypeEnum: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:PricingByDayOfArrivalBoolean: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:PricingByLengthOfStayBoolean: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:ProductDescriptor: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:IsChangeableFrom: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:IsChangeableTo: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:IsDirectAgency: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:IsFlex: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:IsHotmip: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:LOBType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:MarketChannelTypeCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:PaymentChargeCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:PaymentTime: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:PriceDisplayConfigLogID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RateLevelID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RatePlanCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RatePlanTypeElement: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RoomRatePlanDescription: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RoomTypeCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:SupplierRatePlanCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:SupplierRoomTypeCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:RatePlanPricingCategoryID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:RateRuleDescription: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:AdjustmentType: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:AdvancePurchaseMaxCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:AdvancePurchaseMinCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:CrossOutOriginalPrice: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:DescriptionID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExpirationDateTime: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:LastNightCountRuleApply: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:MinStay: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:NightPositionRuleApply: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:PartialApplyBool: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RateRuleID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RateRuleLogID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RateRuleTypeID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RecurrenceType: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:RateType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:RoomOptions: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:BedAvailableList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:BedAvailable: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:ExtraGuestOption: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:Adult: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Count: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:OfferType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Price: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:Child: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Count: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:OfferType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Price: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:Infant: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Count: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:OfferType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:Price: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:SmokingTypeAvailable: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:HasNonSmoking: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:HasSmoking: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- lc:RoomPricingDetailEntryList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- lc:RoomPricingDetailEntry: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- base:Sequence: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:RoomPricingDetail: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:PriceRate: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PerDayRateEntryList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:PerDayRateEntry: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Sequence: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:LodgingAmountList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:LodgingAmount: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:AmountDescription: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:AmountReferenceCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:CommissionAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _DecimalPlaceCount: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- base:Decimal: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:LodgingAmountCategoryCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:QuotedRateType: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:TimeQuoted: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- lc:SupplierCollectedChargeList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |-- lc:SupplierCollectedCharge: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- base:SimpleAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _VALUE: double (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- _base: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:AmountDescription: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:Details: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:DurationTypeID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:FeeRefAttributeID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |    |    |    |-- lc:ScopeID: long (nullable \u003d true)\n |    |    |    |    |    |-- lbc:Notification: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:LastNotifId: long (nullable \u003d true)\n |    |    |    |    |    |    |-- lbc:LastSentTime: string (nullable \u003d true)\n |    |    |    |    |    |-- revitem:SupplyInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- _revitem: string (nullable \u003d true)\n |    |    |    |    |    |    |-- revitem:RevenueItemTypeCode: long (nullable \u003d true)\n |    |    |    |    |    |    |-- revitem:SupplyChainList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- revitem:SupplyChain: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |-- revitem:PartnerID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- revitem:PartnerRole: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- revitem:PartnerType: long (nullable \u003d true)\n |    |    |    |    |    |    |-- revitem:SupplyContractPartyType: long (nullable \u003d true)\n |    |    |    |    |    |    |-- revitem:SupplyMerchantType: long (nullable \u003d true)\n |    |    |    |    |    |    |-- revitem:SupplyRevenueType: long (nullable \u003d true)\n |    |    |    |    |-- lbc:ReservationStatus: string (nullable \u003d true)\n |    |    |    |    |-- lc:HotelProductBitmask: struct (nullable \u003d true)\n |    |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |    |-- _lc: string (nullable \u003d true)\n |    |    |-- common:OrderLineGUID: string (nullable \u003d true)\n |    |    |-- common:OrderLineSequence: long (nullable \u003d true)\n |    |    |-- common:OrderLineStartEndDateTime: struct (nullable \u003d true)\n |    |    |    |-- common:EndDateTime: string (nullable \u003d true)\n |    |    |    |-- common:StartDateTime: string (nullable \u003d true)\n |    |    |-- common:OrderLineStatus: string (nullable \u003d true)\n |    |    |-- common:OrderLineType: long (nullable \u003d true)\n |    |    |-- common:PaymentRefList: struct (nullable \u003d true)\n |    |    |    |-- common:PaymentRef: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _ref: string (nullable \u003d true)\n |    |    |-- common:SupplyRecordLocator: struct (nullable \u003d true)\n |    |    |    |-- common:BookingItemId: long (nullable \u003d true)\n |    |    |    |-- common:BookingRecordLocator: long (nullable \u003d true)\n |    |    |-- ns5:PriceStructure: struct (nullable \u003d true)\n |    |    |    |-- _message: string (nullable \u003d true)\n |    |    |    |-- _ns2: string (nullable \u003d true)\n |    |    |    |-- _ns5: string (nullable \u003d true)\n |    |    |    |-- ns5:ComponentPrice: struct (nullable \u003d true)\n |    |    |    |    |-- ns5:Component: array (nullable \u003d true)\n |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |-- _id: string (nullable \u003d true)\n |    |    |    |    |    |    |-- ns5:AdditionalDefinitionList: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- ns5:AdditionalDefinition: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- ns5:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- ns5:Value: string (nullable \u003d true)\n |    |    |    |    |    |    |-- ns5:Amount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- ns5:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- ns6:SimpleAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _VALUE: double (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _ns6: string (nullable \u003d true)\n |    |    |    |    |    |    |-- ns5:ComponentDefinition: string (nullable \u003d true)\n |-- common:OrderNumber: long (nullable \u003d true)\n |-- common:OrderSiteInfo: struct (nullable \u003d true)\n |    |-- common:ABTestGroupID: long (nullable \u003d true)\n |    |-- common:AffiliateID: long (nullable \u003d true)\n |    |-- common:ClientID: long (nullable \u003d true)\n |    |-- common:ClientOrderReferenceCode: long (nullable \u003d true)\n |    |-- common:CompanyCode: long (nullable \u003d true)\n |    |-- common:GroupAccountDepartmentID: long (nullable \u003d true)\n |    |-- common:GroupAccountID: long (nullable \u003d true)\n |    |-- common:JurisdictionCode: string (nullable \u003d true)\n |    |-- common:Language: struct (nullable \u003d true)\n |    |    |-- common:CountryAlpha2Code: string (nullable \u003d true)\n |    |    |-- common:LanguageCode: string (nullable \u003d true)\n |    |-- common:LanguageId: long (nullable \u003d true)\n |    |-- common:LegacySiteKey: struct (nullable \u003d true)\n |    |    |-- common:EAPID: long (nullable \u003d true)\n |    |    |-- common:GPID: long (nullable \u003d true)\n |    |    |-- common:TPID: long (nullable \u003d true)\n |    |-- common:ManagementUnitCode: long (nullable \u003d true)\n |    |-- common:MarketingChannelTypeCode: long (nullable \u003d true)\n |    |-- common:PeopleSoftOperatingUnit: long (nullable \u003d true)\n |    |-- common:PointOfSaleOrderReferenceNumber: long (nullable \u003d true)\n |    |-- common:SourceSystem: string (nullable \u003d true)\n |    |-- common:SourceSystemOrder: struct (nullable \u003d true)\n |    |    |-- common:DeviceIDReference: struct (nullable \u003d true)\n |    |    |    |-- common:DeviceIDProvider: string (nullable \u003d true)\n |    |    |    |-- common:ReferenceCode: string (nullable \u003d true)\n |    |    |-- common:Source: string (nullable \u003d true)\n |-- common:OrderStatus: string (nullable \u003d true)\n |-- common:OrderVersion: long (nullable \u003d true)\n |-- common:PaymentDetailList: struct (nullable \u003d true)\n |    |-- common:PaymentDetailData: struct (nullable \u003d true)\n |    |    |-- _id: string (nullable \u003d true)\n |    |    |-- _namespace: string (nullable \u003d true)\n |    |    |-- _type: string (nullable \u003d true)\n |    |    |-- ns2:PaymentPlanDetail: struct (nullable \u003d true)\n |    |    |    |-- _message: string (nullable \u003d true)\n |    |    |    |-- _ns2: string (nullable \u003d true)\n |    |    |    |-- payment:BillingMerchantCategory: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:CompanyCode: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:CreateDate: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:CreatingClientID: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:CreatingClientRequestID: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:Jurisdiction: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:OrderNumber: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:PaymentItemDetail: struct (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |    |-- payment:BrandName: string (nullable \u003d true)\n |    |    |    |    |-- payment:CardPresentCode: string (nullable \u003d true)\n |    |    |    |    |-- payment:LifeCycleStateName: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentAccountID: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentInstrumentID: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentInstrumentServiceID: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentItemChargeOperation: struct (nullable \u003d true)\n |    |    |    |    |    |-- payment:IsPending: boolean (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:Amount: double (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentItemHoldStep: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- n1:TransactionStatus: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCodeCategory: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCodeNamespace: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusMessage: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:CanReuse: boolean (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ClientRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:CreateDate: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:Amount: double (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentItemCommitHoldStep: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:TransactionStatus: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCodeCategory: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCodeNamespace: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusMessage: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:ClientRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:CreateDate: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:PaymentItemOperationStepID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:ProcessorRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentItemOperationStepID: long (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ProcessorRequestID: string (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentItemOperationID: long (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentItemRefundOperation: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:IsPending: boolean (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:Amount: double (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentItemOperationID: long (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentItemRefundStep: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:TransactionStatus: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCodeCategory: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusCodeNamespace: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:StatusMessage: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:AdditionalData: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:Attribute: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Value: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:ClientRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:CreateDate: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:PaymentItemOperationStepID: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:ProcessorRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:TransactionTrackingInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:ClientTransactionID: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- payment:OtherTrackingAttributes: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- n1:Attribute: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |    |-- n1:Value: string (nullable \u003d true)\n |    |    |    |    |    |-- payment:TransactionTrackingInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ClientTransactionID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:OtherTrackingAttributes: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:Attribute: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Value: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentItemCorrelationID: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentItemGUID: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentItemID: long (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentItemVerifyOperation: struct (nullable \u003d true)\n |    |    |    |    |    |-- payment:IsPending: boolean (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentAmount: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:Amount: double (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:CurrencyCode: string (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentItemOperationID: long (nullable \u003d true)\n |    |    |    |    |    |-- payment:PaymentItemVerifyStep: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- n1:TransactionStatus: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCode: long (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCodeCategory: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusCodeNamespace: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:StatusMessage: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:AdditionalData: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:Attribute: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Value: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ClientRequestID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:CreateDate: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:PaymentItemOperationStepID: long (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ProcessorRequestID: string (nullable \u003d true)\n |    |    |    |    |    |-- payment:TransactionTrackingInfo: struct (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:ClientTransactionID: string (nullable \u003d true)\n |    |    |    |    |    |    |-- payment:OtherTrackingAttributes: struct (nullable \u003d true)\n |    |    |    |    |    |    |    |-- n1:Attribute: array (nullable \u003d true)\n |    |    |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |    |    |    |-- n1:Value: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentSubType: string (nullable \u003d true)\n |    |    |    |    |-- payment:PaymentType: string (nullable \u003d true)\n |    |    |    |    |-- payment:TransactionModel: string (nullable \u003d true)\n |    |    |    |-- payment:PaymentPlanCorrelationID: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:PaymentPlanID: struct (nullable \u003d true)\n |    |    |    |    |-- _VALUE: long (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |-- payment:TaggingData: struct (nullable \u003d true)\n |    |    |    |    |-- _payment: string (nullable \u003d true)\n |    |    |    |    |-- n1:Attribute: array (nullable \u003d true)\n |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |-- _n1: string (nullable \u003d true)\n |    |    |    |    |    |    |-- n1:Name: string (nullable \u003d true)\n |    |    |    |    |    |    |-- n1:Value: string (nullable \u003d true)\n\n"
      },
      "dateCreated": "Oct 30, 2017 11:54:23 AM",
      "dateStarted": "Oct 30, 2017 12:39:12 PM",
      "dateFinished": "Oct 30, 2017 12:39:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df1 \u003ddf.select(\"common:AdditionalDataList.common:AdditionalData[0]._content\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:16:18 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509367379526_1958460258",
      "id": "20171030-124259_1297604928",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.sql.AnalysisException: No such struct field common:AdditionalData[0] in common:AdditionalData;\n  at org.apache.spark.sql.catalyst.expressions.ExtractValue$.findField(complexTypeExtractors.scala:85)\n  at org.apache.spark.sql.catalyst.expressions.ExtractValue$.apply(complexTypeExtractors.scala:53)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:276)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$3.apply(LogicalPlan.scala:275)\n  at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n  at scala.collection.immutable.List.foldLeft(List.scala:84)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolve(LogicalPlan.scala:275)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveChildren(LogicalPlan.scala:171)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6$$anonfun$37.apply(Analyzer.scala:851)\n  at org.apache.spark.sql.catalyst.analysis.package$.withPosition(package.scala:48)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:851)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9$$anonfun$applyOrElse$6.applyOrElse(Analyzer.scala:848)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:279)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:289)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:293)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)\n  at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:293)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$6.apply(QueryPlan.scala:298)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:298)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:848)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$$anonfun$apply$9.applyOrElse(Analyzer.scala:790)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan$$anonfun$resolveOperators$1.apply(LogicalPlan.scala:62)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperators(LogicalPlan.scala:61)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:790)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveReferences$.apply(Analyzer.scala:668)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:85)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:82)\n  at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n  at scala.collection.immutable.List.foldLeft(List.scala:84)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:82)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:74)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:74)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:69)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:67)\n  at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:50)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:66)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:2872)\n  at org.apache.spark.sql.Dataset.select(Dataset.scala:1153)\n  at org.apache.spark.sql.Dataset.select(Dataset.scala:1171)\n  ... 48 elided\n"
      },
      "dateCreated": "Oct 30, 2017 12:42:59 PM",
      "dateStarted": "Oct 30, 2017 2:16:18 PM",
      "dateFinished": "Oct 30, 2017 2:16:19 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import  spark.implicits._ ",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 12:57:45 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509368252062_825829015",
      "id": "20171030-125732_1854691048",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport spark.implicits._\n"
      },
      "dateCreated": "Oct 30, 2017 12:57:32 PM",
      "dateStarted": "Oct 30, 2017 12:57:45 PM",
      "dateFinished": "Oct 30, 2017 12:57:46 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df2 \u003d df1.rdd.map(r \u003d\u003e r(0))\ndf2.collect()",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 1:01:13 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509368095954_-1316699692",
      "id": "20171030-125455_176482685",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndf2: org.apache.spark.rdd.RDD[Any] \u003d MapPartitionsRDD[129] at map at \u003cconsole\u003e:34\nres73: Array[Any] \u003d Array(WrappedArray(ACCOUNT_ID\u003dhotelsallprod|REPORT_ITINERARY_NUMBER\u003dfalse|WELCOME_REWARDS\u003dTotalEarned:123::TotalRedeemed:120|S_PROP_37\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|TRAFFIC_TYPE\u003dDesktop|CUSTOMER_ACCOUNT_ID\u003d26683788|WR_NIGHTS_REDEEMED\u003dfalse|S_PRODUCTS\u003dEXPEDIA;13:10005147;3;1329.44|S_PROP_70\u003d215265916|marketingChannelCode\u003d15|S_EVAR_43\u003den_US;HCOM_US;www.hotels.com|CLIENT_AKAMAI_TIMEZONE\u003dEST|ACCOUNT_CREATED\u003dfalse|NEWSLETTER_SIGNUP\u003dfalse|PROFILE_ID\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|LOYALTY_ACCOUNT_ID\u003d7865188|WR_SIGNUP\u003dfalse|S_SERVER\u003dwww.hotels.com|S_PROP_48\u003dpayment model choice : Order confirmed server side after post-pay selected|S_PROP_27\u003d8f6663b8-3138-491c-b6ba-cc83593d3105|version\u003d0|S_EVAR_18\u003dPayment Type Purchase::Credit Card::AmericanExpress::Full::NA::Exi..."
      },
      "dateCreated": "Oct 30, 2017 12:54:55 PM",
      "dateStarted": "Oct 30, 2017 1:01:13 PM",
      "dateFinished": "Oct 30, 2017 1:01:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d spark.sql(\"\"\"select   `common:AdditionalDataList`[\u0027common:AdditionalData\u0027][0][\u0027_content\u0027] as c1  from oms_xml1\"\"\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:16:29 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509368282278_1540105219",
      "id": "20171030-125802_216705755",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ntest: org.apache.spark.sql.DataFrame \u003d [c1: string]\n"
      },
      "dateCreated": "Oct 30, 2017 12:58:02 PM",
      "dateStarted": "Oct 30, 2017 2:16:29 PM",
      "dateFinished": "Oct 30, 2017 2:16:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test2 \u003d test.map(_.getString(0)).collect()(0).split(\"\\\\|\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:16:34 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509369213067_978709480",
      "id": "20171030-131333_1628280104",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test2: Array[String] \u003d Array(ACCOUNT_ID\u003dhotelsallprod, REPORT_ITINERARY_NUMBER\u003dtrue, WELCOME_REWARDS\u003dTotalEarned:72::TotalRedeemed:70, S_PROP_37\u003d05635a3b-b32d-48f7-bdf9-90b71bf79e7d, TRAFFIC_TYPE\u003dMob :: Web, CUSTOMER_ACCOUNT_ID\u003d59441196, WR_NIGHTS_REDEEMED\u003dfalse, S_PRODUCTS\u003dEXPEDIA;13:15988020;1;37.04, S_PROP_70\u003d230776741, marketingChannelCode\u003d15, S_EVAR_43\u003den_GB;HCOM_UK;uk.hotels.com, CLIENT_AKAMAI_TIMEZONE\u003dGMT, ACCOUNT_CREATED\u003dfalse, NEWSLETTER_SIGNUP\u003dfalse, PROFILE_ID\u003d05635a3b-b32d-48f7-bdf9-90b71bf79e7d, LOYALTY_ACCOUNT_ID\u003d22720304, WR_SIGNUP\u003dfalse, S_VISITORID\u003d2CF6B9C88531027B-6000010BE0001FE7, S_SERVER\u003duk.hotels.com, S_PROP_48\u003dpayment model choice : Order confirmed server side after  selected, S_PROP_27\u003d3258acb9-1805-4390-9dc4-ea686587f01f, version\u003d0, S_EVAR_18\u003dPayment Type Purcha..."
      },
      "dateCreated": "Oct 30, 2017 1:13:33 PM",
      "dateStarted": "Oct 30, 2017 2:16:34 PM",
      "dateFinished": "Oct 30, 2017 2:16:43 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "test2.count(_)",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 2:17:06 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509373008451_399838577",
      "id": "20171030-141648_1911690115",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nres128: (String \u003d\u003e Boolean) \u003d\u003e Int \u003d \u003cfunction1\u003e\n"
      },
      "dateCreated": "Oct 30, 2017 2:16:48 PM",
      "dateStarted": "Oct 30, 2017 2:17:06 PM",
      "dateFinished": "Oct 30, 2017 2:17:06 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test2 \u003d test.collect()(0).split(\"\\\\|\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 1:13:41 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509368308760_-579430499",
      "id": "20171030-125828_826604562",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\u003cconsole\u003e:30: error: value split is not a member of org.apache.spark.sql.Row\n       val test2 \u003d test.collect()(0).split(\"\\\\|\")\n                                     ^\n"
      },
      "dateCreated": "Oct 30, 2017 12:58:28 PM",
      "dateStarted": "Oct 30, 2017 1:13:41 PM",
      "dateFinished": "Oct 30, 2017 1:13:41 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "test2(0)",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 1:12:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509369116917_-1171052835",
      "id": "20171030-131156_239141378",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res112: String \u003d ACCOUNT_ID\u003dhotelsallprod|REPORT_ITINERARY_NUMBER\u003dfalse|WELCOME_REWARDS\u003dTotalEarned:123::TotalRedeemed:120|S_PROP_37\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|TRAFFIC_TYPE\u003dDesktop|CUSTOMER_ACCOUNT_ID\u003d26683788|WR_NIGHTS_REDEEMED\u003dfalse|S_PRODUCTS\u003dEXPEDIA;13:10005147;3;1329.44|S_PROP_70\u003d215265916|marketingChannelCode\u003d15|S_EVAR_43\u003den_US;HCOM_US;www.hotels.com|CLIENT_AKAMAI_TIMEZONE\u003dEST|ACCOUNT_CREATED\u003dfalse|NEWSLETTER_SIGNUP\u003dfalse|PROFILE_ID\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|LOYALTY_ACCOUNT_ID\u003d7865188|WR_SIGNUP\u003dfalse|S_SERVER\u003dwww.hotels.com|S_PROP_48\u003dpayment model choice : Order confirmed server side after post-pay selected|S_PROP_27\u003d8f6663b8-3138-491c-b6ba-cc83593d3105|version\u003d0|S_EVAR_18\u003dPayment Type Purchase::Credit Card::AmericanExpress::Full::NA::Existing::Non 3DS::Non GC..."
      },
      "dateCreated": "Oct 30, 2017 1:11:56 PM",
      "dateStarted": "Oct 30, 2017 1:12:26 PM",
      "dateFinished": "Oct 30, 2017 1:12:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select   `common:AdditionalDataList`[\u0027common:AdditionalData\u0027][0][\u0027_content\u0027] from oms_xml1",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 12:54:13 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "common:AdditionalDataList.common:AdditionalData[1]._content",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "common:AdditionalDataList.common:AdditionalData[1]._content",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509366760025_2056297036",
      "id": "20171030-123240_437861758",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "common:AdditionalDataList.common:AdditionalData[0]._content\nACCOUNT_ID\u003dhotelsallprod|REPORT_ITINERARY_NUMBER\u003dfalse|WELCOME_REWARDS\u003dTotalEarned:123::TotalRedeemed:120|S_PROP_37\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|TRAFFIC_TYPE\u003dDesktop|CUSTOMER_ACCOUNT_ID\u003d26683788|WR_NIGHTS_REDEEMED\u003dfalse|S_PRODUCTS\u003dEXPEDIA;13:10005147;3;1329.44|S_PROP_70\u003d215265916|marketingChannelCode\u003d15|S_EVAR_43\u003den_US;HCOM_US;www.hotels.com|CLIENT_AKAMAI_TIMEZONE\u003dEST|ACCOUNT_CREATED\u003dfalse|NEWSLETTER_SIGNUP\u003dfalse|PROFILE_ID\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|LOYALTY_ACCOUNT_ID\u003d7865188|WR_SIGNUP\u003dfalse|S_SERVER\u003dwww.hotels.com|S_PROP_48\u003dpayment model choice : Order confirmed server side after post-pay selected|S_PROP_27\u003d8f6663b8-3138-491c-b6ba-cc83593d3105|version\u003d0|S_EVAR_18\u003dPayment Type Purchase::Credit Card::AmericanExpress::Full::NA::Existing::Non 3DS::Non GC::Unknown|WR_AUTOMATIC_SIGNUP\u003dfalse|S_EVAR_13\u003d251463|SIGNED_UP_TO_EXISTING_ACCOUNT\u003dfalse|S_EVAR_14\u003dNo DRR|S_MARKETING_CLOUD_VISITORID\u003d77187585297170944929109659051413631960\n"
      },
      "dateCreated": "Oct 30, 2017 12:32:40 PM",
      "dateStarted": "Oct 30, 2017 12:54:13 PM",
      "dateFinished": "Oct 30, 2017 12:54:16 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select `common:Language`[\u0027common:CountryAlpha2Code\u0027] from oms_xml1",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 12:38:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "common:Language",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "common:Language",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509364708029_240909995",
      "id": "20171030-115828_161028587",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "common:Language.common:CountryAlpha2Code\nUS\n"
      },
      "dateCreated": "Oct 30, 2017 11:58:28 AM",
      "dateStarted": "Oct 30, 2017 12:38:32 PM",
      "dateFinished": "Oct 30, 2017 12:38:33 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df1 \u003d df.select(\"common:AdditionalDataList\").select(\"common:AdditionalDataList\")",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:18:10 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509361895970_1409686035",
      "id": "20171030-111135_1377175674",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "df1: org.apache.spark.sql.DataFrame \u003d [common:AdditionalDataList: struct\u003ccommon:AdditionalData: array\u003cstruct\u003c_VALUE:string,_content:string,_id:string,_isPersistable:boolean,_key:string,_namespace:string,common:ItineraryID:struct\u003ccommon:ItineraryNumber:bigint,common:TravelProductId:bigint,common:TravelRecordLocator:bigint\u003e,data:ExpediaUser:struct\u003cdata:User:struct\u003cdata:LegacySiteKey:bigint,data:UserID:bigint\u003e\u003e,ns46:NudataBehaviorDetails:struct\u003c_message:string,_ns2:string,_ns46:string,ns46:AccountID:bigint,ns46:FlowId:string,ns46:NudataAttributeList:struct\u003cns46:NudataAttribute:array\u003cstruct\u003cns46:key:string,ns46:value:string\u003e\u003e\u003e,ns46:NumberOfInterdictionAttempts:bigint,ns46:Placement:string,ns46:RequiredAction:string,ns46:Score:bigint,ns46:ScoreBand:string,ns46:SessionID:string,ns46:Signature..."
      },
      "dateCreated": "Oct 30, 2017 11:11:35 AM",
      "dateStarted": "Oct 30, 2017 11:18:10 AM",
      "dateFinished": "Oct 30, 2017 11:18:10 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val df2 \u003d df1(\"common:AdditionalDataList\")\n",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:28:16 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509362713341_2114250222",
      "id": "20171030-112513_1862664132",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndf2: org.apache.spark.sql.Column \u003d common:AdditionalDataList\n"
      },
      "dateCreated": "Oct 30, 2017 11:25:13 AM",
      "dateStarted": "Oct 30, 2017 11:28:16 AM",
      "dateFinished": "Oct 30, 2017 11:28:16 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val flattened \u003d commands.withColumn(columname, explode(nameCol))",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:38:37 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509363506357_1800795360",
      "id": "20171030-113826_633380588",
      "dateCreated": "Oct 30, 2017 11:38:26 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var df3 \u003d df1.withColumn(\"value\", explode(df2))",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:33:57 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509363025690_1331866884",
      "id": "20171030-113025_1623739670",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\norg.apache.spark.sql.AnalysisException: cannot resolve \u0027explode(`common:AdditionalDataList`)\u0027 due to data type mismatch: input to function explode should be array or map type, not StructType(StructField(common:AdditionalData,ArrayType(StructType(StructField(_VALUE,StringType,true), StructField(_content,StringType,true), StructField(_id,StringType,true), StructField(_isPersistable,BooleanType,true), StructField(_key,StringType,true), StructField(_namespace,StringType,true), StructField(common:ItineraryID,StructType(StructField(common:ItineraryNumber,LongType,true), StructField(common:TravelProductId,LongType,true), StructField(common:TravelRecordLocator,LongType,true)),true), StructField(data:ExpediaUser,StructType(StructField(data:User,StructType(StructField(data:LegacySiteKey,LongType,true), StructField(data:UserID,LongType,true)),true)),true), StructField(ns46:NudataBehaviorDetails,StructType(StructField(_message,StringType,true), StructField(_ns2,StringType,true), StructField(_ns46,StringType,true), StructField(ns46:AccountID,LongType,true), StructField(ns46:FlowId,StringType,true), StructField(ns46:NudataAttributeList,StructType(StructField(ns46:NudataAttribute,ArrayType(StructType(StructField(ns46:key,StringType,true), StructField(ns46:value,StringType,true)),true),true)),true), StructField(ns46:NumberOfInterdictionAttempts,LongType,true), StructField(ns46:Placement,StringType,true), StructField(ns46:RequiredAction,StringType,true), StructField(ns46:Score,LongType,true), StructField(ns46:ScoreBand,StringType,true), StructField(ns46:SessionID,StringType,true), StructField(ns46:SignatureItemList,StringType,true)),true)),true),true));;\n\u0027Project [common:AdditionalDataList#98, explode(common:AdditionalDataList#98) AS value#220]\n+- Project [common:AdditionalDataList#98]\n   +- Project [common:AdditionalDataList#98]\n      +- Relation[common:AdditionalDataList#98,common:AssociatedUsers#99,common:LastUpdateDate#100,common:OrderCreateDate#101,common:OrderId#102L,common:OrderLineList#103,common:OrderNumber#104L,common:OrderSiteInfo#105,common:OrderStatus#106,common:OrderVersion#107L,common:PaymentDetailList#108] XmlRelation(\u003cfunction0\u003e,Some(s3://hcom-data-prod-users/omateosventura/oms_output.xml),Map(rowtag -\u003e event:Order, path -\u003e s3://hcom-data-prod-users/omateosventura/oms_output.xml),null)\n\n  at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:42)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:93)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1$$anonfun$apply$2.applyOrElse(CheckAnalysis.scala:85)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformUp$1.apply(TreeNode.scala:289)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:288)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:306)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:304)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformUp(TreeNode.scala:286)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$transformExpressionsUp$1.apply(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpression$1(QueryPlan.scala:279)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:289)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1$1.apply(QueryPlan.scala:293)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:245)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at scala.collection.TraversableLike$class.map(TraversableLike.scala:245)\n  at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.org$apache$spark$sql$catalyst$plans$QueryPlan$$recursiveTransform$1(QueryPlan.scala:293)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan$$anonfun$6.apply(QueryPlan.scala:298)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.mapExpressions(QueryPlan.scala:298)\n  at org.apache.spark.sql.catalyst.plans.QueryPlan.transformExpressionsUp(QueryPlan.scala:268)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:85)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$$anonfun$checkAnalysis$1.apply(CheckAnalysis.scala:78)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp(TreeNode.scala:127)\n  at org.apache.spark.sql.catalyst.analysis.CheckAnalysis$class.checkAnalysis(CheckAnalysis.scala:78)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.checkAnalysis(Analyzer.scala:91)\n  at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:52)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:66)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$withPlan(Dataset.scala:2872)\n  at org.apache.spark.sql.Dataset.select(Dataset.scala:1153)\n  at org.apache.spark.sql.Dataset.withColumn(Dataset.scala:1908)\n  ... 46 elided\n"
      },
      "dateCreated": "Oct 30, 2017 11:30:25 AM",
      "dateStarted": "Oct 30, 2017 11:33:57 AM",
      "dateFinished": "Oct 30, 2017 11:33:57 AM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "df1.printSchema()",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:29:20 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509362903515_548751275",
      "id": "20171030-112823_1996939753",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "root\n |-- common:AdditionalDataList: struct (nullable \u003d true)\n |    |-- common:AdditionalData: array (nullable \u003d true)\n |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |-- _VALUE: string (nullable \u003d true)\n |    |    |    |-- _content: string (nullable \u003d true)\n |    |    |    |-- _id: string (nullable \u003d true)\n |    |    |    |-- _isPersistable: boolean (nullable \u003d true)\n |    |    |    |-- _key: string (nullable \u003d true)\n |    |    |    |-- _namespace: string (nullable \u003d true)\n |    |    |    |-- common:ItineraryID: struct (nullable \u003d true)\n |    |    |    |    |-- common:ItineraryNumber: long (nullable \u003d true)\n |    |    |    |    |-- common:TravelProductId: long (nullable \u003d true)\n |    |    |    |    |-- common:TravelRecordLocator: long (nullable \u003d true)\n |    |    |    |-- data:ExpediaUser: struct (nullable \u003d true)\n |    |    |    |    |-- data:User: struct (nullable \u003d true)\n |    |    |    |    |    |-- data:LegacySiteKey: long (nullable \u003d true)\n |    |    |    |    |    |-- data:UserID: long (nullable \u003d true)\n |    |    |    |-- ns46:NudataBehaviorDetails: struct (nullable \u003d true)\n |    |    |    |    |-- _message: string (nullable \u003d true)\n |    |    |    |    |-- _ns2: string (nullable \u003d true)\n |    |    |    |    |-- _ns46: string (nullable \u003d true)\n |    |    |    |    |-- ns46:AccountID: long (nullable \u003d true)\n |    |    |    |    |-- ns46:FlowId: string (nullable \u003d true)\n |    |    |    |    |-- ns46:NudataAttributeList: struct (nullable \u003d true)\n |    |    |    |    |    |-- ns46:NudataAttribute: array (nullable \u003d true)\n |    |    |    |    |    |    |-- element: struct (containsNull \u003d true)\n |    |    |    |    |    |    |    |-- ns46:key: string (nullable \u003d true)\n |    |    |    |    |    |    |    |-- ns46:value: string (nullable \u003d true)\n |    |    |    |    |-- ns46:NumberOfInterdictionAttempts: long (nullable \u003d true)\n |    |    |    |    |-- ns46:Placement: string (nullable \u003d true)\n |    |    |    |    |-- ns46:RequiredAction: string (nullable \u003d true)\n |    |    |    |    |-- ns46:Score: long (nullable \u003d true)\n |    |    |    |    |-- ns46:ScoreBand: string (nullable \u003d true)\n |    |    |    |    |-- ns46:SessionID: string (nullable \u003d true)\n |    |    |    |    |-- ns46:SignatureItemList: string (nullable \u003d true)\n\n"
      },
      "dateCreated": "Oct 30, 2017 11:28:23 AM",
      "dateStarted": "Oct 30, 2017 11:29:20 AM",
      "dateFinished": "Oct 30, 2017 11:29:20 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val wpA \u003d df1(\"common:AdditionalDataList\")(0)  ",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:19:52 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509362356338_-1283620557",
      "id": "20171030-111916_1535741269",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nwpA: org.apache.spark.sql.Column \u003d common:AdditionalDataList[0]\n"
      },
      "dateCreated": "Oct 30, 2017 11:19:16 AM",
      "dateStarted": "Oct 30, 2017 11:19:52 AM",
      "dateFinished": "Oct 30, 2017 11:19:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(wpA(0))",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:20:53 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509362131533_-606076393",
      "id": "20171030-111531_1480200704",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "common:AdditionalDataList[0][0]\n"
      },
      "dateCreated": "Oct 30, 2017 11:15:31 AM",
      "dateStarted": "Oct 30, 2017 11:20:53 AM",
      "dateFinished": "Oct 30, 2017 11:20:53 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select  * From oms_xml1",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:11:14 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "common:AdditionalDataList",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "common:AdditionalDataList",
              "index": 0.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509278125912_-95716002",
      "id": "20171029-115525_1860151148",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "common:AdditionalDataList\tcommon:AssociatedUsers\tcommon:LastUpdateDate\tcommon:OrderCreateDate\tcommon:OrderId\tcommon:OrderLineList\tcommon:OrderNumber\tcommon:OrderSiteInfo\tcommon:OrderStatus\tcommon:OrderVersion\tcommon:PaymentDetailList\n[WrappedArray([null,ACCOUNT_ID\u003dhotelsallprod|REPORT_ITINERARY_NUMBER\u003dfalse|WELCOME_REWARDS\u003dTotalEarned:123::TotalRedeemed:120|S_PROP_37\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|TRAFFIC_TYPE\u003dDesktop|CUSTOMER_ACCOUNT_ID\u003d26683788|WR_NIGHTS_REDEEMED\u003dfalse|S_PRODUCTS\u003dEXPEDIA;13:10005147;3;1329.44|S_PROP_70\u003d215265916|marketingChannelCode\u003d15|S_EVAR_43\u003den_US;HCOM_US;www.hotels.com|CLIENT_AKAMAI_TIMEZONE\u003dEST|ACCOUNT_CREATED\u003dfalse|NEWSLETTER_SIGNUP\u003dfalse|PROFILE_ID\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|LOYALTY_ACCOUNT_ID\u003d7865188|WR_SIGNUP\u003dfalse|S_SERVER\u003dwww.hotels.com|S_PROP_48\u003dpayment model choice : Order confirmed server side after post-pay selected|S_PROP_27\u003d8f6663b8-3138-491c-b6ba-cc83593d3105|version\u003d0|S_EVAR_18\u003dPayment Type Purchase::Credit Card::AmericanExpress::Full::NA::Existing::Non 3DS::Non GC::Unknown|WR_AUTOMATIC_SIGNUP\u003dfalse|S_EVAR_13\u003d251463|SIGNED_UP_TO_EXISTING_ACCOUNT\u003dfalse|S_EVAR_14\u003dNo DRR|S_MARKETING_CLOUD_VISITORID\u003d77187585297170944929109659051413631960,uuid_0e8e82bf-9bed-4751-85b0-b64001e5a00f,true,BookingOmnitureParameters,hcom,null,null,null], [null,null,uuid_33f9d46b-714e-41d4-aa5d-c0301a18ce22,true,NuDataBehavioralDetails,urn:expedia:fraud:nudata:messages:defn:v1,null,null,[urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,urn:expedia:fraud:nudata:messages:defn:v1,26683788,fc-P5B54p5AxT5ok1AMcF0qW7cDhl8x,[WrappedArray([DeviceUID,wcs-wZlPAUmyIkcm2pY5JmXRJAxx], [DeviceFingerprint,d1-4ae6f067dcfe818])],0,Purchase,Proceed,0,Green,wsc-jDAMA6JbGHu5MNsgI5FuBqWsPe4x,null]], [null,HCOM_US,uuid_3d7c4e77-aff2-414a-b858-06f8e70dd7c1,true,BookingPos,hcom,null,null,null], [null,en_US,uuid_b707903d-7994-46f9-b613-934dffd76221,true,BookingLocale,hcom,null,null,null], [null,false,false,uuid_195235aa-cd57-4e0b-bec0-29bb7074175b,true,loyaltySignUpResult,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com,uuid_9bde7704-c18b-4afd-bae1-245f3fe9504b,true,marketingVisitMarketingCode,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com,uuid_442013fb-785b-4ca6-9180-6d3686ea473a,true,marketingLastTouchedMarketingCode,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com.kwrd\u003dunknown,uuid_8455b371-8ed1-4df6-8467-6c54c7ad5d43,true,marketingFullMarketingTrackingCode,hcom,null,null,null], [null,Desktop,uuid_3a95ef49-1edc-4187-a3f6-9e0c8bb05c13,true,userPlatformId,hcom,null,null,null], [null,WR Member,uuid_5185423f-8e81-4fa2-bc31-50950ec44382,true,userWrStatus,hcom,null,null,null], [null,false,uuid_f334e6c1-6d17-4115-8899-0b98ec5cbb3d,true,eligible_for_package_rates,hcom,null,null,null], [null,423975605,GUID_97f75888-78cd-4546-8306-a311a0b167a1,null,ItineraryID,urn:expedia:om:common:defn:v1,[142397560541,3001,423975605],null,null], [null,null,GUID_84ae5ca8-6dad-4cd8-8112-6f836242d1b1,null,SingleUseAccountUserKey,urn:expedia:om:datatype:defn:v1,null,[[3001,448387297]],null])]\t[[[null,USA,11716],rroughton@sklarheyman.com,Ralph E,USA,Roughton Jr,[0,0,5168194948],[urn:expedia:om:datatype:defn:v1,HotelsUser,[26683788,ceb526bf-39a1-4afb-8c5d-1852611a932f]]]]\t2017-10-27T04:11:59.377-07:00\t2017-10-17T07:19:36-07:00\t-9223372035334867569\t[[2017-10-27T04:11:59.377-07:00,Updated,2017-10-17T07:19:36.753-07:00,[urn:expedia:e3:ss:lodging:lodginginterface:bookingcommontypes:defn:v2,BookedItem,[urn:expedia:e3:ss:lodging:lodginginterface:bookingcommontypes:defn:v2,urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,[0,urn:expedia:e3:data:basetypes:defn:v4],2017-10-17T07:20:00-07:00,[WrappedArray([3,ed4eaa78-ed81-474e-baff-c0e14143571d,926388059,1,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,b4f5ab4b-8cfe-4e03-b27c-994da9546e77,926388059,2,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,0e28e133-0442-4c39-a226-ac59a5c0f919,926388059,3,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,57089057-1668-44bd-bdcd-41c9b9d1c871,926388059,4,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,749df5d7-b0d8-4c7f-a900-74c8255c3bef,926388059,5,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,2ba5022a-2862-4992-aa9e-27b90b04e542,926388059,6,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,25170c77-b53c-4177-8c33-a8d03e205327,926388059,7,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,94f2651c-0ac5-463f-a81a-6bbf34fa7ceb,926388059,8,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,d5f637e9-f607-43d3-9007-bfb2844725b9,926388059,9,[[5,urn:expedia:e3:data:basetypes:defn:v4,7380000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,003bd7ff-5d6a-4bca-b738-7f2e2a3b00c4,926388059,10,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,ba4657ef-576d-4d22-814b-0818a98d9b75,926388059,11,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,9eb46e10-b9de-454d-89d5-1d218f6bb073,926388059,12,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,f247cf65-b280-4f75-95fe-2c79fe228ae4,926388059,16,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,04bfa6cb-6e34-43bd-9b9c-36e0352573c5,926388059,17,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,490efc24-7b94-41bb-8171-65aa37233afc,926388059,18,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,24699dfd-7265-4898-ad95-079c51a2d3ad,926388059,19,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,7aebfa18-a223-4e45-b5f2-7f668d7a2a8c,926388059,20,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,a099b100-e08b-4a2d-8ae0-fe1d042990e3,926388059,21,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,217f2994-80a0-4541-8e7b-99dcafcde7e7,926388059,22,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,9a2d0528-cb14-4533-9c61-650520692fb0,926388059,23,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,a79b8a9d-d7f0-459c-be3d-1d0fb3e94211,926388059,24,[[5,urn:expedia:e3:data:basetypes:defn:v4,-7380000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,06bd09d9-1c2d-4466-b1a6-98bc090fc2e4,926388059,25,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,51e100da-0c08-45c4-9eed-d49d4f148f93,926388059,26,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,26f60e5e-47b2-4c82-8b06-43efba5982d7,926388059,27,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,98d0465d-4df6-49ac-ae6c-6cceff0ae77b,926388059,13,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,34171da4-2be7-4cc5-b7d2-29ab284fc3c4,926388059,14,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,6cb385be-94aa-4498-bc95-64f2a56ba897,926388059,15,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,7380000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,e774762f-ead7-41fa-a11d-bc6836c8a98e,926388059,28,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,52915f5f-b920-44db-9b00-234c219ac412,926388059,29,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,5cd04939-f1d8-4aa3-a271-cff5cb7a918b,926388059,30,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-7380000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05])],2017-10-27T04:12:00-07:00,[EXP-926388059,0,[0,926388059,926388059]],2017-10-17T07:20:00-07:00,0,0,[[[0,urn:expedia:e3:data:basetypes:defn:v4],[23,[1,0]],[null,[[0,urn:expedia:e3:data:placetypes:defn:v4],[0,urn:expedia:e3:data:placetypes:defn:v4],[5168194948,urn:expedia:e3:data:placetypes:defn:v4]],448387297,[rroughton@sklarheyman.com,urn:expedia:e3:data:persontypes:defn:v4],[Ralph E,urn:expedia:e3:data:persontypes:defn:v4],[Roughton Jr,urn:expedia:e3:data:persontypes:defn:v4]],[urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4,2]],926388059,[0,[2017-11-03,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[2017-11-06,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4,[4207400,UnknownAvail,0,[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],10005147,[1,null,LocalInventory,10005147,null],0,1,(GMT-05:00) Eastern Time (US \u0026 Canada),26],[UnknownAvail,23,[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],0,8328,[[[WrappedArray([214290373,1,[5,urn:expedia:e3:data:basetypes:defn:v4,0],72,null], [214290372,0,[5,urn:expedia:e3:data:basetypes:defn:v4,0],0,72])],18:00:00],0,[2,255,0,0]],0,TotalPrice,0,0,[1,1,1,1,0,29,15,3,2,0,0,206969414,524288,Ocean Front 2 Queen Beds,201409272,201409272A,201409272],StayBased,[AmountOverride,0,0,0,0,2079-06-06T00:00:00+00:00,0,0,0,0,215265916,0,HiddenDynamicRateRule,SingleRecurrence],0,[[23],[[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]],[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]],[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]]],[1,0]],[[[0,urn:expedia:e3:data:basetypes:defn:v4],[[[WrappedArray([[0,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,8180],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4908000],null,null,null,8])]], [[1,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,8180],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4908000],null,null,null,8])]], [[2,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,7380],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4428000],null,null,null,8])]])]],2,2017-10-27T04:12:00-07:00],[[[98.4,urn:expedia:e3:data:basetypes:defn:v4],ResortFee,[1,2701,3]]]]]]]],[909984040,2017-10-17T07:20:00-07:00],[urn:expedia:e3:data:revitemtypes:defn:v1,1001,[WrappedArray([10005147,11,11], [10005147,16,11], [10111,15,13], [10111,12,13])],11,12,11]],Cancelled,[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]]],e4d7df3b-0604-419b-80d4-04a920cbe9bd,1,[2017-11-06T00:00:00-05:00,2017-11-03T00:00:00-05:00],Canceled,11,[[null,PaymentPlanDetails_a507c2ec-eca9-437e-ad31-04fab59e7c37]],[926388059,598970120],[urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,urn:expedia:e3:data:financetypes:defn:v5,[WrappedArray([GUID_c178eaff-c1ac-4539-a454-a255141ad05f,[[BookingAmountID,f247cf65-b280-4f75-95fe-2c79fe228ae4]],[USD,[-409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_49a1aa7b-ec84-4768-804c-f9647aa90a2b,[[BookingAmountID,04bfa6cb-6e34-43bd-9b9c-36e0352573c5]],[USD,[-20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_3509162b-e283-4f6b-b043-c5658b72fb31,[[BookingAmountID,490efc24-7b94-41bb-8171-65aa37233afc]],[USD,[-24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c7ef29b8-17ea-4654-8065-47b034949b59,[[BookingAmountID,24699dfd-7265-4898-ad95-079c51a2d3ad]],[USD,[-4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_23d65870-df6e-4db3-ab46-5645f0bc6fec,[[BookingAmountID,7aebfa18-a223-4e45-b5f2-7f668d7a2a8c]],[USD,[-409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_f8a7fbb5-95fe-4575-9210-f5d12ca88cee,[[BookingAmountID,a099b100-e08b-4a2d-8ae0-fe1d042990e3]],[USD,[-20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1f730798-d739-4e73-a5b7-043a0052fa19,[[BookingAmountID,217f2994-80a0-4541-8e7b-99dcafcde7e7]],[USD,[-24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_b678726f-4ca5-4bfc-84ed-3ffcc4061d8e,[[BookingAmountID,9a2d0528-cb14-4533-9c61-650520692fb0]],[USD,[-4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_fe24f500-ff4e-44cb-87bf-ff022a7b5532,[[BookingAmountID,a79b8a9d-d7f0-459c-be3d-1d0fb3e94211]],[USD,[-369.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1e6503f1-58f1-4b47-bfd5-1e84e0cbc9f7,[[BookingAmountID,06bd09d9-1c2d-4466-b1a6-98bc090fc2e4]],[USD,[-18.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cb86d241-70c8-4975-843b-08dec2284628,[[BookingAmountID,51e100da-0c08-45c4-9eed-d49d4f148f93]],[USD,[-22.14,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_9ed67c65-7016-45f2-af6d-f78c0600f483,[[BookingAmountID,26f60e5e-47b2-4c82-8b06-43efba5982d7]],[USD,[-3.69,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_e9f2986b-a4d6-4763-a20d-221a5c2eeba0,[[BookingAmountID,ed4eaa78-ed81-474e-baff-c0e14143571d]],[USD,[409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_ddafe043-4313-4480-90f8-210dbe28ab15,[[BookingAmountID,b4f5ab4b-8cfe-4e03-b27c-994da9546e77]],[USD,[20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_bbcbdc26-438b-4b4f-8ff1-478e0bbf0363,[[BookingAmountID,0e28e133-0442-4c39-a226-ac59a5c0f919]],[USD,[24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_bf3d0632-a680-466f-b0eb-86dae233fa7b,[[BookingAmountID,57089057-1668-44bd-bdcd-41c9b9d1c871]],[USD,[4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c073cc3e-fcdf-4bf3-9925-97f95ca2087c,[[BookingAmountID,749df5d7-b0d8-4c7f-a900-74c8255c3bef]],[USD,[409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_8cdc9d63-8f6a-4e1a-9d57-eec7bf885329,[[BookingAmountID,2ba5022a-2862-4992-aa9e-27b90b04e542]],[USD,[20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_f112b59a-a545-4bbb-9fee-b2f1b5aedcf7,[[BookingAmountID,25170c77-b53c-4177-8c33-a8d03e205327]],[USD,[24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_b0edde70-c161-4343-a830-d3cc00e0b5ad,[[BookingAmountID,94f2651c-0ac5-463f-a81a-6bbf34fa7ceb]],[USD,[4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cdc39c5f-6549-4f25-8b33-840dad182240,[[BookingAmountID,d5f637e9-f607-43d3-9007-bfb2844725b9]],[USD,[369.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cf3db670-0209-4fc9-941a-2da31e808b10,[[BookingAmountID,003bd7ff-5d6a-4bca-b738-7f2e2a3b00c4]],[USD,[18.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_05059170-479a-41ef-bd60-a3ac4e084dee,[[BookingAmountID,ba4657ef-576d-4d22-814b-0818a98d9b75]],[USD,[22.14,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_9d3bcf39-ab25-489c-b9cb-1b475843fbf8,[[BookingAmountID,9eb46e10-b9de-454d-89d5-1d218f6bb073]],[USD,[3.69,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1a6feab0-6537-4ef4-ad23-e736ea52a7d8,[[BookingAmountID,98d0465d-4df6-49ac-ae6c-6cceff0ae77b]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_0c609869-0ce4-42cb-a44d-87d6cc99fa78,[[BookingAmountID,34171da4-2be7-4cc5-b7d2-29ab284fc3c4]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_0ceafde6-21f1-4498-8082-605b982b16fd,[[BookingAmountID,6cb385be-94aa-4498-bc95-64f2a56ba897]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_49dd8cdf-359d-44dc-a95c-8ded8d7f9154,[[BookingAmountID,e774762f-ead7-41fa-a11d-bc6836c8a98e]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cc478b27-aa5a-4d8a-8bba-5547588ad9d8,[[BookingAmountID,52915f5f-b920-44db-9b00-234c219ac412]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c0fbe541-0133-4818-a313-48b043962fbe,[[BookingAmountID,5cd04939-f1d8-4aa3-a271-cff5cb7a918b]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base])]]]]\t8078536867048\t[0,251463,4,1508251478187,10113,0,0,USA,[US,en],1033,[1,0,3001],2015,15,4001,8078536867048,Traditional Browser,[[iovation,0400mTR4Z7+BQcwNf94lis1ztlkWjf2fZuuchzgpJ3c1fC/qISq8bnAIvWOcXQU3CqEr7YoMkGX46iNS3W9AP7+HVLEfVk9EjAzqz2mqlN1xLBcmINsJ9VlMYGTX23I2zuDzEYngAz99aSN782GOqyatSUE6ri7+QlNDmGODXWbkrLSLP/wT3etan4O/34dlMYx/fAHtJofzkmbIB9QxnksoWmbZIYRwZnYim9ceHDKRCiJCEOnIUe2SbaV46r0SrTSJLuz+HM3F1yn9LhP5/51Z3CJcDXDAkE9D6k9y2HePj0X+l28K6cNZJo+aoibakUlF/EyIPHexW0tln3WfCyAO5azwqQahxzD8f9Mx8AMLtrO1hfmKTtd68dvxHNZ3NkrhGk0Z9BtTQmXahfHNUX2jn3TiGIBwv90GNX2cElbVjcksAKqO1xGcC/MnUXRbki+t71Emyfi7c90d/tZS2Kh2RBu3xR1d00mI+Bm5xKWFhPnvYHlX2t0OIClCz8QbOZkvGRHvjriYIbITny8Tct+zrzn0pXustTCquQFH9RMRtje1TTOhPjFOoE/h6EFXXmXEykY8ztojHDBHDo0vYYDC354zBdLJUBjmbazR87feXj4jmR3L2eiAEs5IvsRSnt/SF8AZkZDFo1kiVdNhXF05IYw7ZduB4m3YyO5ER6dvoQVHyx/yWVrtlayNzGkmK4M7yvNuWlaWTPwk/64lKoqM3wDorceNFA82v7JSfawcIIhig5RxJ/i9V7I+vS3zO1UWrlN+Awf0o9eusa2jjh0Vn9OHjs7HO5CL//li8nYbsqK3OPuUo3ukRtOtXYtZlAzfYvysJka9ZQDCQai4/k8/K9DvxPQAaf/XuwLLNTE9qpxSaLebtV4tZJ8AkDBm7zpC8xwR2yg0QuH2Y95pHXlLhjSXUAXJS1tThh/AUUjk4JErt2a++WNOvfNcsbOPsJObTeSODiAccuYFCE1XRfN+HZ21ET4rhaHYN4YbjEiJxk39hHJ0nGwyiB4+9TH6q1bl8o6Izx92pNuKIqtsEK4EL1UlSIs/QYMq8sm8xARKWRu0I4QET6GM93GCCae77GziQnpAYrkQWylysVKadX0zrf6+aeAOifMIFGwhItcnf/A2Gv2vkCs1rC0ezwJ/14ObSNlIqyJvWMy6nFrry+a2AMjkVwdBGCUdB9+js9aUVSn8jMckPhzqtO+6B5ASSf+Is6PJYG6/Lvjp7IIEQIGzPDxjm5ttWi5Ssks1ujxJoxy/kwjcGwJu7CaCvounOawPDI183n566sd4QETI91jfbh8RCRiQARyJ5sdrzcINkHp7lagK5ocPUOqbMcgqhGm/K8zGf6z8Fy03MIbnf8OcQCgaKE8tvSKRF/1qlwhRV9CUC/BNMMhBr2QGo32R0wiO+Q01MzvlCxr1gVKyFjPDPFdYRJThBAGXIPM9hrixNh0\u003d],Traditional Browser]]\tCanceled\t4\t[[PaymentPlanDetails_a507c2ec-eca9-437e-ad31-04fab59e7c37,urn:expedia:payment:processor:messages:v2,PaymentPlanDetail,[urn:expedia:om:order:event:messages:v2,urn:expedia:payment:processor:messages:v2,[ThirdParty,urn:expedia:payment:processor:messages:v2],[10113,urn:expedia:payment:processor:messages:v2],[2017-10-17T07:19:37.120-07:00,urn:expedia:payment:processor:messages:v2],[e62198da-6291-4394-a2bb-218218600302,urn:expedia:payment:processor:messages:v2],[b6eea9bd-40db-43cb-a578-d059f051513f,urn:expedia:payment:processor:messages:v2],[USA,urn:expedia:payment:processor:messages:v2],[8078536867048,urn:expedia:payment:processor:messages:v2],[urn:expedia:payment:processor:messages:v2,AmericanExpress,WebPaymentByCustomer,Success,378265XXXXX3160,31EBDC4A-34D3-461F-9EEE-0C23DC04D5EA,PV,[false,[1329.44,USD],[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],false,2ef89455-33c7-4a56-a633-30e6ecc13e88:100000,2017-10-17T07:19:38.130-07:00,[1329.44,USD],[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],c3623d40-c755-4821-9b9d-2e182adbb2b2:100000,2017-10-17T07:19:38.817-07:00,3711256540,9464d737-a8bd-4838-a033-234153b24889],3711256501,310f61bc-6ed0-446e-9965-c93ff43c963d],3480282034,[true,[-1329.44,USD],3498440642,[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],[[urn:expedia:payment:system:types:v2,CreditCardTypeID,2]],bbe4aaff-f127-430a-8b16-b3de0e0c4b83:100000,2017-10-27T04:12:00.540-07:00,3737828084,a3f156d5-02fa-4b22-90e2-b0fc1d96c569],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentEndDate,2017-11-06], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,538174], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,7887450f-cf18-4af8-a503-9e61403ec631], [urn:expedia:payment:system:types:v2,REFUND_SOURCE,E3])]]],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentEndDate,2017-11-06], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,448387297], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,6b51eb05-9f23-4923-bc36-f67e66470c91])]]],0b860097-3ad9-4c47-b185-82c806394910,12A1A077-7AEE-40B1-A9D7-43764E585FEF,10174268519,[false,[1329.44,USD],3480282033,[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],[WrappedArray([urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0])],b6eea9bd-40db-43cb-a578-d059f051513f:100000,2017-10-17T07:19:37.287-07:00,3711256453,b606bb73-94e7-4e83-83ee-c9e0738a3153],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,448387297], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,6b51eb05-9f23-4923-bc36-f67e66470c91])]]],AmericanExpress,CreditCard,TwoStepCommit],[230e14d3-eb08-4060-8542-81987a510398,urn:expedia:payment:processor:messages:v2],[10170336807,urn:expedia:payment:processor:messages:v2],[urn:expedia:payment:processor:messages:v2,WrappedArray([urn:expedia:payment:system:types:v2,ManagementUnit,2015], [urn:expedia:payment:system:types:v2,AffiliateId,251463], [urn:expedia:payment:system:types:v2,EANBookingChannel,H4P])]]]]\n"
      },
      "dateCreated": "Oct 29, 2017 11:55:25 AM",
      "dateStarted": "Oct 30, 2017 11:11:14 AM",
      "dateFinished": "Oct 30, 2017 11:11:19 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select * From oms_xml1",
      "user": "omateosventura@hotels.com",
      "dateUpdated": "Oct 30, 2017 11:05:04 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "common:Air",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "common:Bus",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "common:Air",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "common:Bus",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509278205968_-2139194031",
      "id": "20171029-115645_1628821674",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "event:EventDetails\tevent:EventHeader\tevent:EventId\tevent:EventType\n[7887450f-cf18-4af8-a503-9e61403ec631,423975605,[Customer,[urn:expedia:om:datatype:defn:v1,HotelsUserType,[[1,538174]]]],[[WrappedArray([null,ACCOUNT_ID\u003dhotelsallprod|REPORT_ITINERARY_NUMBER\u003dfalse|WELCOME_REWARDS\u003dTotalEarned:123::TotalRedeemed:120|S_PROP_37\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|TRAFFIC_TYPE\u003dDesktop|CUSTOMER_ACCOUNT_ID\u003d26683788|WR_NIGHTS_REDEEMED\u003dfalse|S_PRODUCTS\u003dEXPEDIA;13:10005147;3;1329.44|S_PROP_70\u003d215265916|marketingChannelCode\u003d15|S_EVAR_43\u003den_US;HCOM_US;www.hotels.com|CLIENT_AKAMAI_TIMEZONE\u003dEST|ACCOUNT_CREATED\u003dfalse|NEWSLETTER_SIGNUP\u003dfalse|PROFILE_ID\u003dceb526bf-39a1-4afb-8c5d-1852611a932f|LOYALTY_ACCOUNT_ID\u003d7865188|WR_SIGNUP\u003dfalse|S_SERVER\u003dwww.hotels.com|S_PROP_48\u003dpayment model choice : Order confirmed server side after post-pay selected|S_PROP_27\u003d8f6663b8-3138-491c-b6ba-cc83593d3105|version\u003d0|S_EVAR_18\u003dPayment Type Purchase::Credit Card::AmericanExpress::Full::NA::Existing::Non 3DS::Non GC::Unknown|WR_AUTOMATIC_SIGNUP\u003dfalse|S_EVAR_13\u003d251463|SIGNED_UP_TO_EXISTING_ACCOUNT\u003dfalse|S_EVAR_14\u003dNo DRR|S_MARKETING_CLOUD_VISITORID\u003d77187585297170944929109659051413631960,uuid_0e8e82bf-9bed-4751-85b0-b64001e5a00f,true,BookingOmnitureParameters,hcom,null,null,null], [null,null,uuid_33f9d46b-714e-41d4-aa5d-c0301a18ce22,true,NuDataBehavioralDetails,urn:expedia:fraud:nudata:messages:defn:v1,null,null,[urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,urn:expedia:fraud:nudata:messages:defn:v1,26683788,fc-P5B54p5AxT5ok1AMcF0qW7cDhl8x,[WrappedArray([DeviceUID,wcs-wZlPAUmyIkcm2pY5JmXRJAxx], [DeviceFingerprint,d1-4ae6f067dcfe818])],0,Purchase,Proceed,0,Green,wsc-jDAMA6JbGHu5MNsgI5FuBqWsPe4x,null]], [null,HCOM_US,uuid_3d7c4e77-aff2-414a-b858-06f8e70dd7c1,true,BookingPos,hcom,null,null,null], [null,en_US,uuid_b707903d-7994-46f9-b613-934dffd76221,true,BookingLocale,hcom,null,null,null], [null,false,false,uuid_195235aa-cd57-4e0b-bec0-29bb7074175b,true,loyaltySignUpResult,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com,uuid_9bde7704-c18b-4afd-bae1-245f3fe9504b,true,marketingVisitMarketingCode,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com,uuid_442013fb-785b-4ca6-9180-6d3686ea473a,true,marketingLastTouchedMarketingCode,hcom,null,null,null], [null,seo.hcom.us.b2.search.yahoo.com.kwrd\u003dunknown,uuid_8455b371-8ed1-4df6-8467-6c54c7ad5d43,true,marketingFullMarketingTrackingCode,hcom,null,null,null], [null,Desktop,uuid_3a95ef49-1edc-4187-a3f6-9e0c8bb05c13,true,userPlatformId,hcom,null,null,null], [null,WR Member,uuid_5185423f-8e81-4fa2-bc31-50950ec44382,true,userWrStatus,hcom,null,null,null], [null,false,uuid_f334e6c1-6d17-4115-8899-0b98ec5cbb3d,true,eligible_for_package_rates,hcom,null,null,null], [null,423975605,GUID_97f75888-78cd-4546-8306-a311a0b167a1,null,ItineraryID,urn:expedia:om:common:defn:v1,[142397560541,3001,423975605],null,null], [null,null,GUID_84ae5ca8-6dad-4cd8-8112-6f836242d1b1,null,SingleUseAccountUserKey,urn:expedia:om:datatype:defn:v1,null,[[3001,448387297]],null])],[[[null,USA,11716],rroughton@sklarheyman.com,Ralph E,USA,Roughton Jr,[0,0,5168194948],[urn:expedia:om:datatype:defn:v1,HotelsUser,[26683788,ceb526bf-39a1-4afb-8c5d-1852611a932f]]]],2017-10-27T04:11:59.377-07:00,2017-10-17T07:19:36-07:00,-9223372035334867569,[[2017-10-27T04:11:59.377-07:00,Updated,2017-10-17T07:19:36.753-07:00,[urn:expedia:e3:ss:lodging:lodginginterface:bookingcommontypes:defn:v2,BookedItem,[urn:expedia:e3:ss:lodging:lodginginterface:bookingcommontypes:defn:v2,urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,[0,urn:expedia:e3:data:basetypes:defn:v4],2017-10-17T07:20:00-07:00,[WrappedArray([3,ed4eaa78-ed81-474e-baff-c0e14143571d,926388059,1,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,b4f5ab4b-8cfe-4e03-b27c-994da9546e77,926388059,2,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,0e28e133-0442-4c39-a226-ac59a5c0f919,926388059,3,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,57089057-1668-44bd-bdcd-41c9b9d1c871,926388059,4,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,749df5d7-b0d8-4c7f-a900-74c8255c3bef,926388059,5,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,2ba5022a-2862-4992-aa9e-27b90b04e542,926388059,6,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,25170c77-b53c-4177-8c33-a8d03e205327,926388059,7,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,94f2651c-0ac5-463f-a81a-6bbf34fa7ceb,926388059,8,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,d5f637e9-f607-43d3-9007-bfb2844725b9,926388059,9,[[5,urn:expedia:e3:data:basetypes:defn:v4,7380000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,003bd7ff-5d6a-4bca-b738-7f2e2a3b00c4,926388059,10,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,ba4657ef-576d-4d22-814b-0818a98d9b75,926388059,11,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,9eb46e10-b9de-454d-89d5-1d218f6bb073,926388059,12,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,f247cf65-b280-4f75-95fe-2c79fe228ae4,926388059,16,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,04bfa6cb-6e34-43bd-9b9c-36e0352573c5,926388059,17,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,490efc24-7b94-41bb-8171-65aa37233afc,926388059,18,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,24699dfd-7265-4898-ad95-079c51a2d3ad,926388059,19,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,7aebfa18-a223-4e45-b5f2-7f668d7a2a8c,926388059,20,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-40900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,a099b100-e08b-4a2d-8ae0-fe1d042990e3,926388059,21,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2045000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,217f2994-80a0-4541-8e7b-99dcafcde7e7,926388059,22,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2454000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,9a2d0528-cb14-4533-9c61-650520692fb0,926388059,23,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-409000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,a79b8a9d-d7f0-459c-be3d-1d0fb3e94211,926388059,24,[[5,urn:expedia:e3:data:basetypes:defn:v4,-7380000],[5,urn:expedia:e3:data:basetypes:defn:v4,20000]],[[5,urn:expedia:e3:data:basetypes:defn:v4,-36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,6,8,1,Base,[[5,urn:expedia:e3:data:basetypes:defn:v4,-36900000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[206969414A,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,06bd09d9-1c2d-4466-b1a6-98bc090fc2e4,926388059,25,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329436,3,3,Accommodations Tax-County,[[5,urn:expedia:e3:data:basetypes:defn:v4,-1845000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,51e100da-0c08-45c4-9eed-d49d4f148f93,926388059,26,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,201329439,3,3,General Sales and Use Tax-State,[[5,urn:expedia:e3:data:basetypes:defn:v4,-2214000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[none,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,26f60e5e-47b2-4c82-8b06-43efba5982d7,926388059,27,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,202172408,3,3,Public Facilities Tax,[[5,urn:expedia:e3:data:basetypes:defn:v4,-369000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,98d0465d-4df6-49ac-ae6c-6cceff0ae77b,926388059,13,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,34171da4-2be7-4cc5-b7d2-29ab284fc3c4,926388059,14,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,6cb385be-94aa-4498-bc95-64f2a56ba897,926388059,15,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,7380000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-17T07:20:00-07:00,3001,448387297,0,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05], [3,e774762f-ead7-41fa-a11d-bc6836c8a98e,926388059,28,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],1,2017-11-03], [3,52915f5f-b920-44db-9b00-234c219ac412,926388059,29,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-8180000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2,2017-11-04], [3,5cd04939-f1d8-4aa3-a271-cff5cb7a918b,926388059,30,null,[[5,urn:expedia:e3:data:basetypes:defn:v4,-7380000],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],2017-10-27T04:12:00-07:00,3001,538174,1,0,55,19,Commission,[[5,urn:expedia:e3:data:basetypes:defn:v4,0],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[null,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[USD,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]],3,2017-11-05])],2017-10-27T04:12:00-07:00,[EXP-926388059,0,[0,926388059,926388059]],2017-10-17T07:20:00-07:00,0,0,[[[0,urn:expedia:e3:data:basetypes:defn:v4],[23,[1,0]],[null,[[0,urn:expedia:e3:data:placetypes:defn:v4],[0,urn:expedia:e3:data:placetypes:defn:v4],[5168194948,urn:expedia:e3:data:placetypes:defn:v4]],448387297,[rroughton@sklarheyman.com,urn:expedia:e3:data:persontypes:defn:v4],[Ralph E,urn:expedia:e3:data:persontypes:defn:v4],[Roughton Jr,urn:expedia:e3:data:persontypes:defn:v4]],[urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4,2]],926388059,[0,[2017-11-03,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[2017-11-06,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4],[urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4,[4207400,UnknownAvail,0,[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],10005147,[1,null,LocalInventory,10005147,null],0,1,(GMT-05:00) Eastern Time (US \u0026 Canada),26],[UnknownAvail,23,[USD,2,[5,urn:expedia:e3:data:basetypes:defn:v4,100000],[2017-10-26T16:02:00-07:00,urn:expedia:e3:data:timetypes:defn:v4]],0,8328,[[[WrappedArray([214290373,1,[5,urn:expedia:e3:data:basetypes:defn:v4,0],72,null], [214290372,0,[5,urn:expedia:e3:data:basetypes:defn:v4,0],0,72])],18:00:00],0,[2,255,0,0]],0,TotalPrice,0,0,[1,1,1,1,0,29,15,3,2,0,0,206969414,524288,Ocean Front 2 Queen Beds,201409272,201409272A,201409272],StayBased,[AmountOverride,0,0,0,0,2079-06-06T00:00:00+00:00,0,0,0,0,215265916,0,HiddenDynamicRateRule,SingleRecurrence],0,[[23],[[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]],[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]],[0,0,[[0,urn:expedia:e3:data:basetypes:defn:v4,0],USD]]],[1,0]],[[[0,urn:expedia:e3:data:basetypes:defn:v4],[[[WrappedArray([[0,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,8180],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4908000],null,null,null,8])]], [[1,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,40900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,8180],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4908000],null,null,null,8])]], [[2,urn:expedia:e3:data:basetypes:defn:v4],[WrappedArray([[5,urn:expedia:e3:data:basetypes:defn:v4,36900000],null,206969414A,[2,urn:expedia:e3:data:basetypes:defn:v4,7380],1], [[5,urn:expedia:e3:data:basetypes:defn:v4,4428000],null,null,null,8])]])]],2,2017-10-27T04:12:00-07:00],[[[98.4,urn:expedia:e3:data:basetypes:defn:v4],ResortFee,[1,2701,3]]]]]]]],[909984040,2017-10-17T07:20:00-07:00],[urn:expedia:e3:data:revitemtypes:defn:v1,1001,[WrappedArray([10005147,11,11], [10005147,16,11], [10111,15,13], [10111,12,13])],11,12,11]],Cancelled,[1,urn:expedia:e3:ss:lodging:lodginginterface:commontypes:defn:v4]]],e4d7df3b-0604-419b-80d4-04a920cbe9bd,1,[2017-11-06T00:00:00-05:00,2017-11-03T00:00:00-05:00],Canceled,11,[[null,PaymentPlanDetails_a507c2ec-eca9-437e-ad31-04fab59e7c37]],[926388059,598970120],[urn:expedia:om:order:event:messages:v2,urn:expedia:om:common:defn:v1,urn:expedia:e3:data:financetypes:defn:v5,[WrappedArray([GUID_c178eaff-c1ac-4539-a454-a255141ad05f,[[BookingAmountID,f247cf65-b280-4f75-95fe-2c79fe228ae4]],[USD,[-409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_49a1aa7b-ec84-4768-804c-f9647aa90a2b,[[BookingAmountID,04bfa6cb-6e34-43bd-9b9c-36e0352573c5]],[USD,[-20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_3509162b-e283-4f6b-b043-c5658b72fb31,[[BookingAmountID,490efc24-7b94-41bb-8171-65aa37233afc]],[USD,[-24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c7ef29b8-17ea-4654-8065-47b034949b59,[[BookingAmountID,24699dfd-7265-4898-ad95-079c51a2d3ad]],[USD,[-4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_23d65870-df6e-4db3-ab46-5645f0bc6fec,[[BookingAmountID,7aebfa18-a223-4e45-b5f2-7f668d7a2a8c]],[USD,[-409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_f8a7fbb5-95fe-4575-9210-f5d12ca88cee,[[BookingAmountID,a099b100-e08b-4a2d-8ae0-fe1d042990e3]],[USD,[-20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1f730798-d739-4e73-a5b7-043a0052fa19,[[BookingAmountID,217f2994-80a0-4541-8e7b-99dcafcde7e7]],[USD,[-24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_b678726f-4ca5-4bfc-84ed-3ffcc4061d8e,[[BookingAmountID,9a2d0528-cb14-4533-9c61-650520692fb0]],[USD,[-4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_fe24f500-ff4e-44cb-87bf-ff022a7b5532,[[BookingAmountID,a79b8a9d-d7f0-459c-be3d-1d0fb3e94211]],[USD,[-369.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1e6503f1-58f1-4b47-bfd5-1e84e0cbc9f7,[[BookingAmountID,06bd09d9-1c2d-4466-b1a6-98bc090fc2e4]],[USD,[-18.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cb86d241-70c8-4975-843b-08dec2284628,[[BookingAmountID,51e100da-0c08-45c4-9eed-d49d4f148f93]],[USD,[-22.14,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_9ed67c65-7016-45f2-af6d-f78c0600f483,[[BookingAmountID,26f60e5e-47b2-4c82-8b06-43efba5982d7]],[USD,[-3.69,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_e9f2986b-a4d6-4763-a20d-221a5c2eeba0,[[BookingAmountID,ed4eaa78-ed81-474e-baff-c0e14143571d]],[USD,[409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_ddafe043-4313-4480-90f8-210dbe28ab15,[[BookingAmountID,b4f5ab4b-8cfe-4e03-b27c-994da9546e77]],[USD,[20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_bbcbdc26-438b-4b4f-8ff1-478e0bbf0363,[[BookingAmountID,0e28e133-0442-4c39-a226-ac59a5c0f919]],[USD,[24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_bf3d0632-a680-466f-b0eb-86dae233fa7b,[[BookingAmountID,57089057-1668-44bd-bdcd-41c9b9d1c871]],[USD,[4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c073cc3e-fcdf-4bf3-9925-97f95ca2087c,[[BookingAmountID,749df5d7-b0d8-4c7f-a900-74c8255c3bef]],[USD,[409.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_8cdc9d63-8f6a-4e1a-9d57-eec7bf885329,[[BookingAmountID,2ba5022a-2862-4992-aa9e-27b90b04e542]],[USD,[20.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_f112b59a-a545-4bbb-9fee-b2f1b5aedcf7,[[BookingAmountID,25170c77-b53c-4177-8c33-a8d03e205327]],[USD,[24.54,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_b0edde70-c161-4343-a830-d3cc00e0b5ad,[[BookingAmountID,94f2651c-0ac5-463f-a81a-6bbf34fa7ceb]],[USD,[4.09,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cdc39c5f-6549-4f25-8b33-840dad182240,[[BookingAmountID,d5f637e9-f607-43d3-9007-bfb2844725b9]],[USD,[369.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cf3db670-0209-4fc9-941a-2da31e808b10,[[BookingAmountID,003bd7ff-5d6a-4bca-b738-7f2e2a3b00c4]],[USD,[18.45,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_05059170-479a-41ef-bd60-a3ac4e084dee,[[BookingAmountID,ba4657ef-576d-4d22-814b-0818a98d9b75]],[USD,[22.14,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_9d3bcf39-ab25-489c-b9cb-1b475843fbf8,[[BookingAmountID,9eb46e10-b9de-454d-89d5-1d218f6bb073]],[USD,[3.69,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_1a6feab0-6537-4ef4-ad23-e736ea52a7d8,[[BookingAmountID,98d0465d-4df6-49ac-ae6c-6cceff0ae77b]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_0c609869-0ce4-42cb-a44d-87d6cc99fa78,[[BookingAmountID,34171da4-2be7-4cc5-b7d2-29ab284fc3c4]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_0ceafde6-21f1-4498-8082-605b982b16fd,[[BookingAmountID,6cb385be-94aa-4498-bc95-64f2a56ba897]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_49dd8cdf-359d-44dc-a95c-8ded8d7f9154,[[BookingAmountID,e774762f-ead7-41fa-a11d-bc6836c8a98e]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_cc478b27-aa5a-4d8a-8bba-5547588ad9d8,[[BookingAmountID,52915f5f-b920-44db-9b00-234c219ac412]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base], [GUID_c0fbe541-0133-4818-a313-48b043962fbe,[[BookingAmountID,5cd04939-f1d8-4aa3-a271-cff5cb7a918b]],[USD,[0.0,urn:expedia:e3:data:basetypes:defn:v4]],Base])]]]],8078536867048,[0,251463,4,1508251478187,10113,0,0,USA,[US,en],1033,[1,0,3001],2015,15,4001,8078536867048,Traditional Browser,[[iovation,0400mTR4Z7+BQcwNf94lis1ztlkWjf2fZuuchzgpJ3c1fC/qISq8bnAIvWOcXQU3CqEr7YoMkGX46iNS3W9AP7+HVLEfVk9EjAzqz2mqlN1xLBcmINsJ9VlMYGTX23I2zuDzEYngAz99aSN782GOqyatSUE6ri7+QlNDmGODXWbkrLSLP/wT3etan4O/34dlMYx/fAHtJofzkmbIB9QxnksoWmbZIYRwZnYim9ceHDKRCiJCEOnIUe2SbaV46r0SrTSJLuz+HM3F1yn9LhP5/51Z3CJcDXDAkE9D6k9y2HePj0X+l28K6cNZJo+aoibakUlF/EyIPHexW0tln3WfCyAO5azwqQahxzD8f9Mx8AMLtrO1hfmKTtd68dvxHNZ3NkrhGk0Z9BtTQmXahfHNUX2jn3TiGIBwv90GNX2cElbVjcksAKqO1xGcC/MnUXRbki+t71Emyfi7c90d/tZS2Kh2RBu3xR1d00mI+Bm5xKWFhPnvYHlX2t0OIClCz8QbOZkvGRHvjriYIbITny8Tct+zrzn0pXustTCquQFH9RMRtje1TTOhPjFOoE/h6EFXXmXEykY8ztojHDBHDo0vYYDC354zBdLJUBjmbazR87feXj4jmR3L2eiAEs5IvsRSnt/SF8AZkZDFo1kiVdNhXF05IYw7ZduB4m3YyO5ER6dvoQVHyx/yWVrtlayNzGkmK4M7yvNuWlaWTPwk/64lKoqM3wDorceNFA82v7JSfawcIIhig5RxJ/i9V7I+vS3zO1UWrlN+Awf0o9eusa2jjh0Vn9OHjs7HO5CL//li8nYbsqK3OPuUo3ukRtOtXYtZlAzfYvysJka9ZQDCQai4/k8/K9DvxPQAaf/XuwLLNTE9qpxSaLebtV4tZJ8AkDBm7zpC8xwR2yg0QuH2Y95pHXlLhjSXUAXJS1tThh/AUUjk4JErt2a++WNOvfNcsbOPsJObTeSODiAccuYFCE1XRfN+HZ21ET4rhaHYN4YbjEiJxk39hHJ0nGwyiB4+9TH6q1bl8o6Izx92pNuKIqtsEK4EL1UlSIs/QYMq8sm8xARKWRu0I4QET6GM93GCCae77GziQnpAYrkQWylysVKadX0zrf6+aeAOifMIFGwhItcnf/A2Gv2vkCs1rC0ezwJ/14ObSNlIqyJvWMy6nFrry+a2AMjkVwdBGCUdB9+js9aUVSn8jMckPhzqtO+6B5ASSf+Is6PJYG6/Lvjp7IIEQIGzPDxjm5ttWi5Ssks1ujxJoxy/kwjcGwJu7CaCvounOawPDI183n566sd4QETI91jfbh8RCRiQARyJ5sdrzcINkHp7lagK5ocPUOqbMcgqhGm/K8zGf6z8Fy03MIbnf8OcQCgaKE8tvSKRF/1qlwhRV9CUC/BNMMhBr2QGo32R0wiO+Q01MzvlCxr1gVKyFjPDPFdYRJThBAGXIPM9hrixNh0\u003d],Traditional Browser]],Canceled,4,[[PaymentPlanDetails_a507c2ec-eca9-437e-ad31-04fab59e7c37,urn:expedia:payment:processor:messages:v2,PaymentPlanDetail,[urn:expedia:om:order:event:messages:v2,urn:expedia:payment:processor:messages:v2,[ThirdParty,urn:expedia:payment:processor:messages:v2],[10113,urn:expedia:payment:processor:messages:v2],[2017-10-17T07:19:37.120-07:00,urn:expedia:payment:processor:messages:v2],[e62198da-6291-4394-a2bb-218218600302,urn:expedia:payment:processor:messages:v2],[b6eea9bd-40db-43cb-a578-d059f051513f,urn:expedia:payment:processor:messages:v2],[USA,urn:expedia:payment:processor:messages:v2],[8078536867048,urn:expedia:payment:processor:messages:v2],[urn:expedia:payment:processor:messages:v2,AmericanExpress,WebPaymentByCustomer,Success,378265XXXXX3160,31EBDC4A-34D3-461F-9EEE-0C23DC04D5EA,PV,[false,[1329.44,USD],[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],false,2ef89455-33c7-4a56-a633-30e6ecc13e88:100000,2017-10-17T07:19:38.130-07:00,[1329.44,USD],[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],c3623d40-c755-4821-9b9d-2e182adbb2b2:100000,2017-10-17T07:19:38.817-07:00,3711256540,9464d737-a8bd-4838-a033-234153b24889],3711256501,310f61bc-6ed0-446e-9965-c93ff43c963d],3480282034,[true,[-1329.44,USD],3498440642,[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],[[urn:expedia:payment:system:types:v2,CreditCardTypeID,2]],bbe4aaff-f127-430a-8b16-b3de0e0c4b83:100000,2017-10-27T04:12:00.540-07:00,3737828084,a3f156d5-02fa-4b22-90e2-b0fc1d96c569],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentEndDate,2017-11-06], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,538174], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,7887450f-cf18-4af8-a503-9e61403ec631], [urn:expedia:payment:system:types:v2,REFUND_SOURCE,E3])]]],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentEndDate,2017-11-06], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,448387297], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,6b51eb05-9f23-4923-bc36-f67e66470c91])]]],0b860097-3ad9-4c47-b185-82c806394910,12A1A077-7AEE-40B1-A9D7-43764E585FEF,10174268519,[false,[1329.44,USD],3480282033,[[urn:expedia:payment:system:types:v2,0,Success,com.expedia.e3.es.payment.common.errorhandling.CommonStatusReportingTemplates,Successfully processed!],[WrappedArray([urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0])],b6eea9bd-40db-43cb-a578-d059f051513f:100000,2017-10-17T07:19:37.287-07:00,3711256453,b606bb73-94e7-4e83-83ee-c9e0738a3153],[678e96ab-7b1a-48a9-b99e-2590fed7df07,[WrappedArray([urn:expedia:payment:system:types:v2,TravelProductID,3001], [urn:expedia:payment:system:types:v2,TUID,448387297], [urn:expedia:payment:system:types:v2,TRL,423975605], [urn:expedia:payment:system:types:v2,ExpediaPurchaseTypeID,2], [urn:expedia:payment:system:types:v2,EAPID,1], [urn:expedia:payment:system:types:v2,GPID,0], [urn:expedia:payment:system:types:v2,PaymentDesc,Description: Order for rroughton@sklarheyman.com, Ralph E Roughton Jr, Itinerary: (none), Start Date: 11/03/2017, End Date: 11/06/2017, Contains: Hotel, EXPEDIA (1)], [urn:expedia:payment:system:types:v2,PaymentReasonID,0], [urn:expedia:payment:system:types:v2,ProxyForPayerID,0], [urn:expedia:payment:system:types:v2,TravServerDBInstance,TravServerITI], [urn:expedia:payment:system:types:v2,TUIDLogon,448387297], [urn:expedia:payment:system:types:v2,LanguageCode,en], [urn:expedia:payment:system:types:v2,LegacyPaymentType,Full], [urn:expedia:payment:system:types:v2,OrderOperationCorrelationID,6b51eb05-9f23-4923-bc36-f67e66470c91])]]],AmericanExpress,CreditCard,TwoStepCommit],[230e14d3-eb08-4060-8542-81987a510398,urn:expedia:payment:processor:messages:v2],[10170336807,urn:expedia:payment:processor:messages:v2],[urn:expedia:payment:processor:messages:v2,WrappedArray([urn:expedia:payment:system:types:v2,ManagementUnit,2015], [urn:expedia:payment:system:types:v2,AffiliateId,251463], [urn:expedia:payment:system:types:v2,EANBookingChannel,H4P])]]]]],[[false,false,false,false,false,true,false,false],None],[193584864,e30ec77b-015c-432a-b8a6-63dc52e0b2f6,174.227.12.107],[0,251463,4,10113,0,0,USA,[US,en],1033,[0,0],2015,15,4001,Traditional Browser,1,[[iovation,0400mTR4Z7+BQcwNf94lis1ztlkWjf2fZuuchzgpJ3c1fC/qISq8bnAIvWOcXQU3CqEr7YoMkGX46iNS3W9AP7+HVLEfVk9EjAzqz2mqlN1xLBcmINsJ9VlMYGTX23I2zuDzEYngAz99aSN782GOqyatSUE6ri7+QlNDmGODXWbkrLSLP/wT3etan4O/34dlMYx/fAHtJofzkmbIB9QxnksoWmbZIYRwZnYim9ceHDKRCiJCEOnIUe2SbaV46r0SrTSJLuz+HM3F1yn9LhP5/51Z3CJcDXDAkE9D6k9y2HePj0X+l28K6cNZJo+aoibakUlF/EyIPHexW0tln3WfCyAO5azwqQahxzD8f9Mx8AMLtrO1hfmKTtd68dvxHNZ3NkrhGk0Z9BtTQmXahfHNUX2jn3TiGIBwv90GNX2cElbVjcksAKqO1xGcC/MnUXRbki+t71Emyfi7c90d/tZS2Kh2RBu3xR1d00mI+Bm5xKWFhPnvYHlX2t0OIClCz8QbOZkvGRHvjriYIbITny8Tct+zrzn0pXustTCquQFH9RMRtje1TTOhPjFOoE/h6EFXXmXEykY8ztojHDBHDo0vYYDC354zBdLJUBjmbazR87feXj4jmR3L2eiAEs5IvsRSnt/SF8AZkZDFo1kiVdNhXF05IYw7ZduB4m3YyO5ER6dvoQVHyx/yWVrtlayNzGkmK4M7yvNuWlaWTPwk/64lKoqM3wDorceNFA82v7JSfawcIIhig5RxJ/i9V7I+vS3zO1UWrlN+Awf0o9eusa2jjh0Vn9OHjs7HO5CL//li8nYbsqK3OPuUo3ukRtOtXYtZlAzfYvysJka9ZQDCQai4/k8/K9DvxPQAaf/XuwLLNTE9qpxSaLebtV4tZJ8AkDBm7zpC8xwR2yg0QuH2Y95pHXlLhjSXUAXJS1tThh/AUUjk4JErt2a++WNOvfNcsbOPsJObTeSODiAccuYFCE1XRfN+HZ21ET4rhaHYN4YbjEiJxk39hHJ0nGwyiB4+9TH6q1bl8o6Izx92pNuKIqtsEK4EL1UlSIs/QYMq8sm8xARKWRu0I4QET6GM93GCCae77GziQnpAYrkQWylysVKadX0zrf6+aeAOifMIFGwhItcnf/A2Gv2vkCs1rC0ezwJ/14ObSNlIqyJvWMy6nFrry+a2AMjkVwdBGCUdB9+js9aUVSn8jMckPhzqtO+6B5ASSf+Is6PJYG6/Lvjp7IIEQIGzPDxjm5ttWi5Ssks1ujxJoxy/kwjcGwJu7CaCvounOawPDI183n566sd4QETI91jfbh8RCRiQARyJ5sdrzcINkHp7lagK5ocPUOqbMcgqhGm/K8zGf6z8Fy03MIbnf8OcQCgaKE8tvSKRF/1qlwhRV9CUC/BNMMhBr2QGo32R0wiO+Q01MzvlCxr1gVKyFjPDPFdYRJThBAGXIPM9hrixNh0\u003d],Traditional Browser]]]\t[-9223372035334867569,8078536867048,4]\t1799434584\t3\n"
      },
      "dateCreated": "Oct 29, 2017 11:56:45 AM",
      "dateStarted": "Oct 30, 2017 11:05:04 AM",
      "dateFinished": "Oct 30, 2017 11:05:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1509278223851_-1254809552",
      "id": "20171029-115703_241738310",
      "dateCreated": "Oct 29, 2017 11:57:03 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "oms_xml_total",
  "id": "45453WECHA1509372712",
  "angularObjects": {
    "2CX8NXR5W284781509408450107:shared_process": [],
    "2CZMF82TA284781509408275486:shared_process": [],
    "2CX1FUJ2W284781509408275489:shared_process": [],
    "2CYYJU5TM284781509408275491:shared_process": []
  },
  "config": {
    "isDashboard": false
  },
  "info": {},
  "source": "FCN"
}